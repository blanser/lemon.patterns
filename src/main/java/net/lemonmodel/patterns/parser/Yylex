// This JLex file was machine-generated by the BNF converter
package net.lemonmodel.patterns.parser;

import java_cup.runtime.*;
%%
%cup
%unicode
%line
%public
%{
  String pstring = new String();
  public int line_num() { return (yyline+1); }
  public String buff() { return new String(yy_buffer,yy_buffer_index,10).trim(); }
%}
LETTER = ({CAPITAL}|{SMALL})
CAPITAL = [A-Z\xC0-\xD6\xD8-\xDE]
SMALL = [a-z\xDF-\xF6\xF8-\xFF]
DIGIT = [0-9]
IDENT = ({LETTER}|{DIGIT}|['_])
%state COMMENT
%state CHAR
%state CHARESC
%state CHAREND
%state STRING
%state ESCAPED
%%
<YYINITIAL>@prefix { return new Symbol(sym._SYMB_0); }
<YYINITIAL>: { return new Symbol(sym._SYMB_1); }
<YYINITIAL>< { return new Symbol(sym._SYMB_2); }
<YYINITIAL>> { return new Symbol(sym._SYMB_3); }
<YYINITIAL>\. { return new Symbol(sym._SYMB_4); }
<YYINITIAL>\( { return new Symbol(sym._SYMB_5); }
<YYINITIAL>, { return new Symbol(sym._SYMB_6); }
<YYINITIAL>\) { return new Symbol(sym._SYMB_7); }
<YYINITIAL>= { return new Symbol(sym._SYMB_8); }
<YYINITIAL>\[ { return new Symbol(sym._SYMB_9); }
<YYINITIAL>\] { return new Symbol(sym._SYMB_10); }
<YYINITIAL>/ { return new Symbol(sym._SYMB_11); }
<YYINITIAL>=> { return new Symbol(sym._SYMB_12); }
<YYINITIAL>AP { return new Symbol(sym._SYMB_13); }
<YYINITIAL>ClassNoun { return new Symbol(sym._SYMB_14); }
<YYINITIAL>ClassRelationalNoun { return new Symbol(sym._SYMB_15); }
<YYINITIAL>ConsequenceVerb { return new Symbol(sym._SYMB_16); }
<YYINITIAL>CopulativeArg { return new Symbol(sym._SYMB_17); }
<YYINITIAL>CopulativeSubject { return new Symbol(sym._SYMB_18); }
<YYINITIAL>DirectObject { return new Symbol(sym._SYMB_19); }
<YYINITIAL>EventVerb { return new Symbol(sym._SYMB_20); }
<YYINITIAL>IndirectObject { return new Symbol(sym._SYMB_21); }
<YYINITIAL>IntersectiveAdjective { return new Symbol(sym._SYMB_22); }
<YYINITIAL>IntersectiveDataPropertyAdjective { return new Symbol(sym._SYMB_23); }
<YYINITIAL>IntersectiveObjectPropertyAdjective { return new Symbol(sym._SYMB_24); }
<YYINITIAL>Lexicon { return new Symbol(sym._SYMB_25); }
<YYINITIAL>NP { return new Symbol(sym._SYMB_26); }
<YYINITIAL>Name { return new Symbol(sym._SYMB_27); }
<YYINITIAL>PNP { return new Symbol(sym._SYMB_28); }
<YYINITIAL>PossessiveAdjunct { return new Symbol(sym._SYMB_29); }
<YYINITIAL>PostpositionalObject { return new Symbol(sym._SYMB_30); }
<YYINITIAL>PrepositionalObject { return new Symbol(sym._SYMB_31); }
<YYINITIAL>PropertyModifyingAdjective { return new Symbol(sym._SYMB_32); }
<YYINITIAL>RelationalAdjective { return new Symbol(sym._SYMB_33); }
<YYINITIAL>RelationalMultivalentNoun { return new Symbol(sym._SYMB_34); }
<YYINITIAL>RelationalNoun { return new Symbol(sym._SYMB_35); }
<YYINITIAL>ScalarAdjective { return new Symbol(sym._SYMB_36); }
<YYINITIAL>StateVerb { return new Symbol(sym._SYMB_37); }
<YYINITIAL>Subject { return new Symbol(sym._SYMB_38); }
<YYINITIAL>VP { return new Symbol(sym._SYMB_39); }
<YYINITIAL>accusative { return new Symbol(sym._SYMB_40); }
<YYINITIAL>adjective { return new Symbol(sym._SYMB_41); }
<YYINITIAL>adposition { return new Symbol(sym._SYMB_42); }
<YYINITIAL>adverb { return new Symbol(sym._SYMB_43); }
<YYINITIAL>article { return new Symbol(sym._SYMB_44); }
<YYINITIAL>as { return new Symbol(sym._SYMB_45); }
<YYINITIAL>bullet { return new Symbol(sym._SYMB_46); }
<YYINITIAL>circumposition { return new Symbol(sym._SYMB_47); }
<YYINITIAL>class { return new Symbol(sym._SYMB_48); }
<YYINITIAL>colon { return new Symbol(sym._SYMB_49); }
<YYINITIAL>comma { return new Symbol(sym._SYMB_50); }
<YYINITIAL>comparative { return new Symbol(sym._SYMB_51); }
<YYINITIAL>conditional { return new Symbol(sym._SYMB_52); }
<YYINITIAL>conjunction { return new Symbol(sym._SYMB_53); }
<YYINITIAL>contravariant { return new Symbol(sym._SYMB_54); }
<YYINITIAL>copula { return new Symbol(sym._SYMB_55); }
<YYINITIAL>covariant { return new Symbol(sym._SYMB_56); }
<YYINITIAL>dative { return new Symbol(sym._SYMB_57); }
<YYINITIAL>determiner { return new Symbol(sym._SYMB_58); }
<YYINITIAL>dual { return new Symbol(sym._SYMB_59); }
<YYINITIAL>durative { return new Symbol(sym._SYMB_60); }
<YYINITIAL>firstPerson { return new Symbol(sym._SYMB_61); }
<YYINITIAL>for { return new Symbol(sym._SYMB_62); }
<YYINITIAL>future { return new Symbol(sym._SYMB_63); }
<YYINITIAL>genitive { return new Symbol(sym._SYMB_64); }
<YYINITIAL>gerundive { return new Symbol(sym._SYMB_65); }
<YYINITIAL>imperative { return new Symbol(sym._SYMB_66); }
<YYINITIAL>imperfect { return new Symbol(sym._SYMB_67); }
<YYINITIAL>indicative { return new Symbol(sym._SYMB_68); }
<YYINITIAL>infinitive { return new Symbol(sym._SYMB_69); }
<YYINITIAL>instant { return new Symbol(sym._SYMB_70); }
<YYINITIAL>interjection { return new Symbol(sym._SYMB_71); }
<YYINITIAL>nominative { return new Symbol(sym._SYMB_72); }
<YYINITIAL>nontelic { return new Symbol(sym._SYMB_73); }
<YYINITIAL>noun { return new Symbol(sym._SYMB_74); }
<YYINITIAL>numeral { return new Symbol(sym._SYMB_75); }
<YYINITIAL>participle { return new Symbol(sym._SYMB_76); }
<YYINITIAL>particle { return new Symbol(sym._SYMB_77); }
<YYINITIAL>past { return new Symbol(sym._SYMB_78); }
<YYINITIAL>plural { return new Symbol(sym._SYMB_79); }
<YYINITIAL>point { return new Symbol(sym._SYMB_80); }
<YYINITIAL>postposition { return new Symbol(sym._SYMB_81); }
<YYINITIAL>preposition { return new Symbol(sym._SYMB_82); }
<YYINITIAL>present { return new Symbol(sym._SYMB_83); }
<YYINITIAL>probObj { return new Symbol(sym._SYMB_84); }
<YYINITIAL>pronoun { return new Symbol(sym._SYMB_85); }
<YYINITIAL>propObj { return new Symbol(sym._SYMB_86); }
<YYINITIAL>propSubj { return new Symbol(sym._SYMB_87); }
<YYINITIAL>property { return new Symbol(sym._SYMB_88); }
<YYINITIAL>punctuation { return new Symbol(sym._SYMB_89); }
<YYINITIAL>relationalArg { return new Symbol(sym._SYMB_90); }
<YYINITIAL>secondPerson { return new Symbol(sym._SYMB_91); }
<YYINITIAL>semiColon { return new Symbol(sym._SYMB_92); }
<YYINITIAL>singular { return new Symbol(sym._SYMB_93); }
<YYINITIAL>slash { return new Symbol(sym._SYMB_94); }
<YYINITIAL>subjunctive { return new Symbol(sym._SYMB_95); }
<YYINITIAL>superlative { return new Symbol(sym._SYMB_96); }
<YYINITIAL>telic { return new Symbol(sym._SYMB_97); }
<YYINITIAL>thirdPerson { return new Symbol(sym._SYMB_98); }
<YYINITIAL>verb { return new Symbol(sym._SYMB_99); }
<YYINITIAL>with { return new Symbol(sym._SYMB_100); }
<YYINITIAL>"//"[^\n]*\n { /* BNFC single-line comment */ }
<YYINITIAL>"/*" { yybegin(COMMENT); }
<COMMENT>"*/" { yybegin(YYINITIAL); }
<COMMENT>. { }
<COMMENT>[\n] { }


<YYINITIAL>[!\"#\$%&'\(\)\*\+,-\./0123456789:;<=\?@ABCDEFGHIJKLMNOPQRSTUVWXYZ\[\]\x5E_`abcdefghijklmnopqrstuvwxyz\{\|\}]+ { return new Symbol(sym.FullURI, yytext().intern()); }

<YYINITIAL>"\"" { yybegin(STRING); }
<STRING>\\ { yybegin(ESCAPED); }
<STRING>\" { String foo = pstring; pstring = new String(); yybegin(YYINITIAL); return new Symbol(sym._STRING_, foo.intern()); }
<STRING>.  { pstring += yytext(); }
<ESCAPED>n { pstring +=  "\n"; yybegin(STRING); }
<ESCAPED>\" { pstring += "\""; yybegin(STRING); }
<ESCAPED>\\ { pstring += "\\"; yybegin(STRING); }
<ESCAPED>t  { pstring += "\t"; yybegin(STRING); }
<ESCAPED>.  { pstring += yytext(); yybegin(STRING); }


<YYINITIAL>{DIGIT}+"."{DIGIT}+("e"(\-)?{DIGIT}+)? { return new Symbol(sym._DOUBLE_, new Double(yytext())); }

<YYINITIAL>{LETTER}{IDENT}* { return new Symbol(sym._IDENT_, yytext().intern()); }
<YYINITIAL>[ \t\r\n\f] { /* ignore white space. */ }
