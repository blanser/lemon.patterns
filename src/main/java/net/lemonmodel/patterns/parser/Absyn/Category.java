package net.lemonmodel.patterns.parser.Absyn; // Java Package generated by the BNF Converter.

public abstract class Category implements java.io.Serializable {
  public abstract <R,A> R accept(Category.Visitor<R,A> v, A arg);
  public interface Visitor <R,A> {
    public R visit(net.lemonmodel.patterns.parser.Absyn.ESingular p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.EDual p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.EPlural p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.ENominative p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.EAccusative p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.EGenitive p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.EDative p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.EComparative p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.ESuperlative p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.EPresent p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.EPast p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.EFuture p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.EFirstPerson p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.ESecondPerson p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.EThirdPerson p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.EImperfect p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.EImperative p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.EIndicative p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.ESubjunctive p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.EConditional p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.EGerundive p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.EInfinitive p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.EParticiple p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.EAnyCat p, A arg);

  }

}
