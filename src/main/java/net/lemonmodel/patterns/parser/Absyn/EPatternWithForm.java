package net.lemonmodel.patterns.parser.Absyn; // Java Package generated by the BNF Converter.

public class EPatternWithForm extends Pattern {
  public final Pattern pattern_;
  public final ListCategory listcategory_;
  public final String string_;

  public EPatternWithForm(Pattern p1, ListCategory p2, String p3) { pattern_ = p1; listcategory_ = p2; string_ = p3; }

  public <R,A> R accept(net.lemonmodel.patterns.parser.Absyn.Pattern.Visitor<R,A> v, A arg) { return v.visit(this, arg); }

  public boolean equals(Object o) {
    if (this == o) return true;
    if (o instanceof net.lemonmodel.patterns.parser.Absyn.EPatternWithForm) {
      net.lemonmodel.patterns.parser.Absyn.EPatternWithForm x = (net.lemonmodel.patterns.parser.Absyn.EPatternWithForm)o;
      return this.pattern_.equals(x.pattern_) && this.listcategory_.equals(x.listcategory_) && this.string_.equals(x.string_);
    }
    return false;
  }

  public int hashCode() {
    return 37*(37*(this.pattern_.hashCode())+this.listcategory_.hashCode())+this.string_.hashCode();
  }


}
