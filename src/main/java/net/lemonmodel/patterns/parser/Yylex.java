// This JLex file was machine-generated by the BNF converter
package net.lemonmodel.patterns.parser;
import java_cup.runtime.*;


public class Yylex implements java_cup.runtime.Scanner {
	private final int YY_BUFFER_SIZE = 512;
	private final int YY_F = -1;
	private final int YY_NO_STATE = -1;
	private final int YY_NOT_ACCEPT = 0;
	private final int YY_START = 1;
	private final int YY_END = 2;
	private final int YY_NO_ANCHOR = 4;
	private final int YY_BOL = 65536;
	private final int YY_EOF = 65537;

  String pstring = new String();
  public int line_num() { return (yyline+1); }
  public String buff() { return new String(yy_buffer,yy_buffer_index,10).trim(); }
	private java.io.BufferedReader yy_reader;
	private int yy_buffer_index;
	private int yy_buffer_read;
	private int yy_buffer_start;
	private int yy_buffer_end;
	private char yy_buffer[];
	private int yyline;
	private boolean yy_at_bol;
	private int yy_lexical_state;

	public Yylex (java.io.Reader reader) {
		this ();
		if (null == reader) {
			throw (new Error("Error: Bad input stream initializer."));
		}
		yy_reader = new java.io.BufferedReader(reader);
	}

	public Yylex (java.io.InputStream instream) {
		this ();
		if (null == instream) {
			throw (new Error("Error: Bad input stream initializer."));
		}
		yy_reader = new java.io.BufferedReader(new java.io.InputStreamReader(instream));
	}

	private Yylex () {
		yy_buffer = new char[YY_BUFFER_SIZE];
		yy_buffer_read = 0;
		yy_buffer_index = 0;
		yy_buffer_start = 0;
		yy_buffer_end = 0;
		yyline = 0;
		yy_at_bol = true;
		yy_lexical_state = YYINITIAL;
	}

	private boolean yy_eof_done = false;
	private final int STRING = 5;
	private final int ESCAPED = 6;
	private final int YYINITIAL = 0;
	private final int COMMENT = 1;
	private final int CHAREND = 4;
	private final int CHARESC = 3;
	private final int CHAR = 2;
	private final int yy_state_dtrans[] = {
		0,
		125,
		127,
		127,
		127,
		129,
		131
	};
	private void yybegin (int state) {
		yy_lexical_state = state;
	}
	private int yy_advance ()
		throws java.io.IOException {
		int next_read;
		int i;
		int j;

		if (yy_buffer_index < yy_buffer_read) {
			return yy_buffer[yy_buffer_index++];
		}

		if (0 != yy_buffer_start) {
			i = yy_buffer_start;
			j = 0;
			while (i < yy_buffer_read) {
				yy_buffer[j] = yy_buffer[i];
				++i;
				++j;
			}
			yy_buffer_end = yy_buffer_end - yy_buffer_start;
			yy_buffer_start = 0;
			yy_buffer_read = j;
			yy_buffer_index = j;
			next_read = yy_reader.read(yy_buffer,
					yy_buffer_read,
					yy_buffer.length - yy_buffer_read);
			if (-1 == next_read) {
				return YY_EOF;
			}
			yy_buffer_read = yy_buffer_read + next_read;
		}

		while (yy_buffer_index >= yy_buffer_read) {
			if (yy_buffer_index >= yy_buffer.length) {
				yy_buffer = yy_double(yy_buffer);
			}
			next_read = yy_reader.read(yy_buffer,
					yy_buffer_read,
					yy_buffer.length - yy_buffer_read);
			if (-1 == next_read) {
				return YY_EOF;
			}
			yy_buffer_read = yy_buffer_read + next_read;
		}
		return yy_buffer[yy_buffer_index++];
	}
	private void yy_move_end () {
		if (yy_buffer_end > yy_buffer_start &&
		    '\n' == yy_buffer[yy_buffer_end-1])
			yy_buffer_end--;
		if (yy_buffer_end > yy_buffer_start &&
		    '\r' == yy_buffer[yy_buffer_end-1])
			yy_buffer_end--;
	}
	private boolean yy_last_was_cr=false;
	private void yy_mark_start () {
		int i;
		for (i = yy_buffer_start; i < yy_buffer_index; ++i) {
			if ('\n' == yy_buffer[i] && !yy_last_was_cr) {
				++yyline;
			}
			if ('\r' == yy_buffer[i]) {
				++yyline;
				yy_last_was_cr=true;
			} else yy_last_was_cr=false;
		}
		yy_buffer_start = yy_buffer_index;
	}
	private void yy_mark_end () {
		yy_buffer_end = yy_buffer_index;
	}
	private void yy_to_mark () {
		yy_buffer_index = yy_buffer_end;
		yy_at_bol = (yy_buffer_end > yy_buffer_start) &&
		            ('\r' == yy_buffer[yy_buffer_end-1] ||
		             '\n' == yy_buffer[yy_buffer_end-1] ||
		             2028/*LS*/ == yy_buffer[yy_buffer_end-1] ||
		             2029/*PS*/ == yy_buffer[yy_buffer_end-1]);
	}
	private java.lang.String yytext () {
		return (new java.lang.String(yy_buffer,
			yy_buffer_start,
			yy_buffer_end - yy_buffer_start));
	}
	private int yylength () {
		return yy_buffer_end - yy_buffer_start;
	}
	private char[] yy_double (char buf[]) {
		int i;
		char newbuf[];
		newbuf = new char[2*buf.length];
		for (i = 0; i < buf.length; ++i) {
			newbuf[i] = buf[i];
		}
		return newbuf;
	}
	private final int YY_E_INTERNAL = 0;
	private final int YY_E_MATCH = 1;
	private java.lang.String yy_error_string[] = {
		"Error: Internal error.\n",
		"Error: Unmatched input.\n"
	};
	private void yy_error (int code,boolean fatal) {
		java.lang.System.out.print(yy_error_string[code]);
		java.lang.System.out.flush();
		if (fatal) {
			throw new Error("Fatal Error.\n");
		}
	}
	private int[][] unpackFromString(int size1, int size2, String st) {
		int colonIndex = -1;
		String lengthString;
		int sequenceLength = 0;
		int sequenceInteger = 0;

		int commaIndex;
		String workString;

		int res[][] = new int[size1][size2];
		for (int i= 0; i < size1; i++) {
			for (int j= 0; j < size2; j++) {
				if (sequenceLength != 0) {
					res[i][j] = sequenceInteger;
					sequenceLength--;
					continue;
				}
				commaIndex = st.indexOf(',');
				workString = (commaIndex==-1) ? st :
					st.substring(0, commaIndex);
				st = st.substring(commaIndex+1);
				colonIndex = workString.indexOf(':');
				if (colonIndex == -1) {
					res[i][j]=Integer.parseInt(workString);
					continue;
				}
				lengthString =
					workString.substring(colonIndex+1);
				sequenceLength=Integer.parseInt(lengthString);
				workString=workString.substring(0,colonIndex);
				sequenceInteger=Integer.parseInt(workString);
				res[i][j] = sequenceInteger;
				sequenceLength--;
			}
		}
		return res;
	}
	private int yy_acpt[] = {
		/* 0 */ YY_NOT_ACCEPT,
		/* 1 */ YY_NO_ANCHOR,
		/* 2 */ YY_NO_ANCHOR,
		/* 3 */ YY_NO_ANCHOR,
		/* 4 */ YY_NO_ANCHOR,
		/* 5 */ YY_NO_ANCHOR,
		/* 6 */ YY_NO_ANCHOR,
		/* 7 */ YY_NO_ANCHOR,
		/* 8 */ YY_NO_ANCHOR,
		/* 9 */ YY_NO_ANCHOR,
		/* 10 */ YY_NO_ANCHOR,
		/* 11 */ YY_NO_ANCHOR,
		/* 12 */ YY_NO_ANCHOR,
		/* 13 */ YY_NO_ANCHOR,
		/* 14 */ YY_NO_ANCHOR,
		/* 15 */ YY_NO_ANCHOR,
		/* 16 */ YY_NO_ANCHOR,
		/* 17 */ YY_NO_ANCHOR,
		/* 18 */ YY_NO_ANCHOR,
		/* 19 */ YY_NO_ANCHOR,
		/* 20 */ YY_NO_ANCHOR,
		/* 21 */ YY_NO_ANCHOR,
		/* 22 */ YY_NO_ANCHOR,
		/* 23 */ YY_NO_ANCHOR,
		/* 24 */ YY_NO_ANCHOR,
		/* 25 */ YY_NO_ANCHOR,
		/* 26 */ YY_NO_ANCHOR,
		/* 27 */ YY_NO_ANCHOR,
		/* 28 */ YY_NO_ANCHOR,
		/* 29 */ YY_NO_ANCHOR,
		/* 30 */ YY_NO_ANCHOR,
		/* 31 */ YY_NO_ANCHOR,
		/* 32 */ YY_NO_ANCHOR,
		/* 33 */ YY_NO_ANCHOR,
		/* 34 */ YY_NO_ANCHOR,
		/* 35 */ YY_NO_ANCHOR,
		/* 36 */ YY_NO_ANCHOR,
		/* 37 */ YY_NO_ANCHOR,
		/* 38 */ YY_NO_ANCHOR,
		/* 39 */ YY_NO_ANCHOR,
		/* 40 */ YY_NO_ANCHOR,
		/* 41 */ YY_NO_ANCHOR,
		/* 42 */ YY_NO_ANCHOR,
		/* 43 */ YY_NO_ANCHOR,
		/* 44 */ YY_NO_ANCHOR,
		/* 45 */ YY_NO_ANCHOR,
		/* 46 */ YY_NO_ANCHOR,
		/* 47 */ YY_NO_ANCHOR,
		/* 48 */ YY_NO_ANCHOR,
		/* 49 */ YY_NO_ANCHOR,
		/* 50 */ YY_NO_ANCHOR,
		/* 51 */ YY_NO_ANCHOR,
		/* 52 */ YY_NO_ANCHOR,
		/* 53 */ YY_NO_ANCHOR,
		/* 54 */ YY_NO_ANCHOR,
		/* 55 */ YY_NO_ANCHOR,
		/* 56 */ YY_NO_ANCHOR,
		/* 57 */ YY_NO_ANCHOR,
		/* 58 */ YY_NO_ANCHOR,
		/* 59 */ YY_NO_ANCHOR,
		/* 60 */ YY_NO_ANCHOR,
		/* 61 */ YY_NO_ANCHOR,
		/* 62 */ YY_NO_ANCHOR,
		/* 63 */ YY_NO_ANCHOR,
		/* 64 */ YY_NO_ANCHOR,
		/* 65 */ YY_NO_ANCHOR,
		/* 66 */ YY_NO_ANCHOR,
		/* 67 */ YY_NO_ANCHOR,
		/* 68 */ YY_NO_ANCHOR,
		/* 69 */ YY_NO_ANCHOR,
		/* 70 */ YY_NO_ANCHOR,
		/* 71 */ YY_NO_ANCHOR,
		/* 72 */ YY_NO_ANCHOR,
		/* 73 */ YY_NO_ANCHOR,
		/* 74 */ YY_NO_ANCHOR,
		/* 75 */ YY_NO_ANCHOR,
		/* 76 */ YY_NO_ANCHOR,
		/* 77 */ YY_NO_ANCHOR,
		/* 78 */ YY_NO_ANCHOR,
		/* 79 */ YY_NO_ANCHOR,
		/* 80 */ YY_NO_ANCHOR,
		/* 81 */ YY_NO_ANCHOR,
		/* 82 */ YY_NO_ANCHOR,
		/* 83 */ YY_NO_ANCHOR,
		/* 84 */ YY_NO_ANCHOR,
		/* 85 */ YY_NO_ANCHOR,
		/* 86 */ YY_NO_ANCHOR,
		/* 87 */ YY_NO_ANCHOR,
		/* 88 */ YY_NO_ANCHOR,
		/* 89 */ YY_NO_ANCHOR,
		/* 90 */ YY_NO_ANCHOR,
		/* 91 */ YY_NO_ANCHOR,
		/* 92 */ YY_NO_ANCHOR,
		/* 93 */ YY_NO_ANCHOR,
		/* 94 */ YY_NO_ANCHOR,
		/* 95 */ YY_NO_ANCHOR,
		/* 96 */ YY_NO_ANCHOR,
		/* 97 */ YY_NO_ANCHOR,
		/* 98 */ YY_NO_ANCHOR,
		/* 99 */ YY_NO_ANCHOR,
		/* 100 */ YY_NO_ANCHOR,
		/* 101 */ YY_NO_ANCHOR,
		/* 102 */ YY_NO_ANCHOR,
		/* 103 */ YY_NO_ANCHOR,
		/* 104 */ YY_NO_ANCHOR,
		/* 105 */ YY_NO_ANCHOR,
		/* 106 */ YY_NO_ANCHOR,
		/* 107 */ YY_NO_ANCHOR,
		/* 108 */ YY_NO_ANCHOR,
		/* 109 */ YY_NO_ANCHOR,
		/* 110 */ YY_NO_ANCHOR,
		/* 111 */ YY_NO_ANCHOR,
		/* 112 */ YY_NO_ANCHOR,
		/* 113 */ YY_NO_ANCHOR,
		/* 114 */ YY_NO_ANCHOR,
		/* 115 */ YY_NO_ANCHOR,
		/* 116 */ YY_NO_ANCHOR,
		/* 117 */ YY_NO_ANCHOR,
		/* 118 */ YY_NO_ANCHOR,
		/* 119 */ YY_NO_ANCHOR,
		/* 120 */ YY_NO_ANCHOR,
		/* 121 */ YY_NO_ANCHOR,
		/* 122 */ YY_NOT_ACCEPT,
		/* 123 */ YY_NO_ANCHOR,
		/* 124 */ YY_NO_ANCHOR,
		/* 125 */ YY_NOT_ACCEPT,
		/* 126 */ YY_NO_ANCHOR,
		/* 127 */ YY_NOT_ACCEPT,
		/* 128 */ YY_NO_ANCHOR,
		/* 129 */ YY_NOT_ACCEPT,
		/* 130 */ YY_NO_ANCHOR,
		/* 131 */ YY_NOT_ACCEPT,
		/* 132 */ YY_NO_ANCHOR,
		/* 133 */ YY_NO_ANCHOR,
		/* 134 */ YY_NO_ANCHOR,
		/* 135 */ YY_NO_ANCHOR,
		/* 136 */ YY_NO_ANCHOR,
		/* 137 */ YY_NO_ANCHOR,
		/* 138 */ YY_NO_ANCHOR,
		/* 139 */ YY_NO_ANCHOR,
		/* 140 */ YY_NO_ANCHOR,
		/* 141 */ YY_NO_ANCHOR,
		/* 142 */ YY_NO_ANCHOR,
		/* 143 */ YY_NO_ANCHOR,
		/* 144 */ YY_NO_ANCHOR,
		/* 145 */ YY_NO_ANCHOR,
		/* 146 */ YY_NO_ANCHOR,
		/* 147 */ YY_NO_ANCHOR,
		/* 148 */ YY_NO_ANCHOR,
		/* 149 */ YY_NO_ANCHOR,
		/* 150 */ YY_NO_ANCHOR,
		/* 151 */ YY_NO_ANCHOR,
		/* 152 */ YY_NO_ANCHOR,
		/* 153 */ YY_NO_ANCHOR,
		/* 154 */ YY_NO_ANCHOR,
		/* 155 */ YY_NO_ANCHOR,
		/* 156 */ YY_NO_ANCHOR,
		/* 157 */ YY_NO_ANCHOR,
		/* 158 */ YY_NO_ANCHOR,
		/* 159 */ YY_NO_ANCHOR,
		/* 160 */ YY_NO_ANCHOR,
		/* 161 */ YY_NO_ANCHOR,
		/* 162 */ YY_NO_ANCHOR,
		/* 163 */ YY_NO_ANCHOR,
		/* 164 */ YY_NO_ANCHOR,
		/* 165 */ YY_NO_ANCHOR,
		/* 166 */ YY_NO_ANCHOR,
		/* 167 */ YY_NO_ANCHOR,
		/* 168 */ YY_NO_ANCHOR,
		/* 169 */ YY_NO_ANCHOR,
		/* 170 */ YY_NO_ANCHOR,
		/* 171 */ YY_NO_ANCHOR,
		/* 172 */ YY_NO_ANCHOR,
		/* 173 */ YY_NO_ANCHOR,
		/* 174 */ YY_NO_ANCHOR,
		/* 175 */ YY_NO_ANCHOR,
		/* 176 */ YY_NO_ANCHOR,
		/* 177 */ YY_NO_ANCHOR,
		/* 178 */ YY_NO_ANCHOR,
		/* 179 */ YY_NO_ANCHOR,
		/* 180 */ YY_NO_ANCHOR,
		/* 181 */ YY_NO_ANCHOR,
		/* 182 */ YY_NO_ANCHOR,
		/* 183 */ YY_NO_ANCHOR,
		/* 184 */ YY_NO_ANCHOR,
		/* 185 */ YY_NO_ANCHOR,
		/* 186 */ YY_NO_ANCHOR,
		/* 187 */ YY_NO_ANCHOR,
		/* 188 */ YY_NO_ANCHOR,
		/* 189 */ YY_NO_ANCHOR,
		/* 190 */ YY_NO_ANCHOR,
		/* 191 */ YY_NO_ANCHOR,
		/* 192 */ YY_NO_ANCHOR,
		/* 193 */ YY_NO_ANCHOR,
		/* 194 */ YY_NO_ANCHOR,
		/* 195 */ YY_NO_ANCHOR,
		/* 196 */ YY_NO_ANCHOR,
		/* 197 */ YY_NO_ANCHOR,
		/* 198 */ YY_NO_ANCHOR,
		/* 199 */ YY_NO_ANCHOR,
		/* 200 */ YY_NO_ANCHOR,
		/* 201 */ YY_NO_ANCHOR,
		/* 202 */ YY_NO_ANCHOR,
		/* 203 */ YY_NO_ANCHOR,
		/* 204 */ YY_NO_ANCHOR,
		/* 205 */ YY_NO_ANCHOR,
		/* 206 */ YY_NO_ANCHOR,
		/* 207 */ YY_NO_ANCHOR,
		/* 208 */ YY_NO_ANCHOR,
		/* 209 */ YY_NO_ANCHOR,
		/* 210 */ YY_NO_ANCHOR,
		/* 211 */ YY_NO_ANCHOR,
		/* 212 */ YY_NO_ANCHOR,
		/* 213 */ YY_NO_ANCHOR,
		/* 214 */ YY_NO_ANCHOR,
		/* 215 */ YY_NO_ANCHOR,
		/* 216 */ YY_NO_ANCHOR,
		/* 217 */ YY_NO_ANCHOR,
		/* 218 */ YY_NO_ANCHOR,
		/* 219 */ YY_NO_ANCHOR,
		/* 220 */ YY_NO_ANCHOR,
		/* 221 */ YY_NO_ANCHOR,
		/* 222 */ YY_NO_ANCHOR,
		/* 223 */ YY_NO_ANCHOR,
		/* 224 */ YY_NO_ANCHOR,
		/* 225 */ YY_NO_ANCHOR,
		/* 226 */ YY_NO_ANCHOR,
		/* 227 */ YY_NO_ANCHOR,
		/* 228 */ YY_NO_ANCHOR,
		/* 229 */ YY_NO_ANCHOR,
		/* 230 */ YY_NO_ANCHOR,
		/* 231 */ YY_NO_ANCHOR,
		/* 232 */ YY_NO_ANCHOR,
		/* 233 */ YY_NO_ANCHOR,
		/* 234 */ YY_NO_ANCHOR,
		/* 235 */ YY_NO_ANCHOR,
		/* 236 */ YY_NO_ANCHOR,
		/* 237 */ YY_NO_ANCHOR,
		/* 238 */ YY_NO_ANCHOR,
		/* 239 */ YY_NO_ANCHOR,
		/* 240 */ YY_NO_ANCHOR,
		/* 241 */ YY_NO_ANCHOR,
		/* 242 */ YY_NO_ANCHOR,
		/* 243 */ YY_NO_ANCHOR,
		/* 244 */ YY_NO_ANCHOR,
		/* 245 */ YY_NO_ANCHOR,
		/* 246 */ YY_NO_ANCHOR,
		/* 247 */ YY_NO_ANCHOR,
		/* 248 */ YY_NO_ANCHOR,
		/* 249 */ YY_NO_ANCHOR,
		/* 250 */ YY_NO_ANCHOR,
		/* 251 */ YY_NO_ANCHOR,
		/* 252 */ YY_NO_ANCHOR,
		/* 253 */ YY_NO_ANCHOR,
		/* 254 */ YY_NO_ANCHOR,
		/* 255 */ YY_NO_ANCHOR,
		/* 256 */ YY_NO_ANCHOR,
		/* 257 */ YY_NO_ANCHOR,
		/* 258 */ YY_NO_ANCHOR,
		/* 259 */ YY_NO_ANCHOR,
		/* 260 */ YY_NO_ANCHOR,
		/* 261 */ YY_NO_ANCHOR,
		/* 262 */ YY_NO_ANCHOR,
		/* 263 */ YY_NO_ANCHOR,
		/* 264 */ YY_NO_ANCHOR,
		/* 265 */ YY_NO_ANCHOR,
		/* 266 */ YY_NO_ANCHOR,
		/* 267 */ YY_NO_ANCHOR,
		/* 268 */ YY_NO_ANCHOR,
		/* 269 */ YY_NO_ANCHOR,
		/* 270 */ YY_NO_ANCHOR,
		/* 271 */ YY_NO_ANCHOR,
		/* 272 */ YY_NO_ANCHOR,
		/* 273 */ YY_NO_ANCHOR,
		/* 274 */ YY_NO_ANCHOR,
		/* 275 */ YY_NO_ANCHOR,
		/* 276 */ YY_NO_ANCHOR,
		/* 277 */ YY_NO_ANCHOR,
		/* 278 */ YY_NO_ANCHOR,
		/* 279 */ YY_NO_ANCHOR,
		/* 280 */ YY_NO_ANCHOR,
		/* 281 */ YY_NO_ANCHOR,
		/* 282 */ YY_NO_ANCHOR,
		/* 283 */ YY_NO_ANCHOR,
		/* 284 */ YY_NO_ANCHOR,
		/* 285 */ YY_NO_ANCHOR,
		/* 286 */ YY_NO_ANCHOR,
		/* 287 */ YY_NO_ANCHOR,
		/* 288 */ YY_NO_ANCHOR,
		/* 289 */ YY_NO_ANCHOR,
		/* 290 */ YY_NO_ANCHOR,
		/* 291 */ YY_NO_ANCHOR,
		/* 292 */ YY_NO_ANCHOR,
		/* 293 */ YY_NO_ANCHOR,
		/* 294 */ YY_NO_ANCHOR,
		/* 295 */ YY_NO_ANCHOR,
		/* 296 */ YY_NO_ANCHOR,
		/* 297 */ YY_NO_ANCHOR,
		/* 298 */ YY_NO_ANCHOR,
		/* 299 */ YY_NO_ANCHOR,
		/* 300 */ YY_NO_ANCHOR,
		/* 301 */ YY_NO_ANCHOR,
		/* 302 */ YY_NO_ANCHOR,
		/* 303 */ YY_NO_ANCHOR,
		/* 304 */ YY_NO_ANCHOR,
		/* 305 */ YY_NO_ANCHOR,
		/* 306 */ YY_NO_ANCHOR,
		/* 307 */ YY_NO_ANCHOR,
		/* 308 */ YY_NO_ANCHOR,
		/* 309 */ YY_NO_ANCHOR,
		/* 310 */ YY_NO_ANCHOR,
		/* 311 */ YY_NO_ANCHOR,
		/* 312 */ YY_NO_ANCHOR,
		/* 313 */ YY_NO_ANCHOR,
		/* 314 */ YY_NO_ANCHOR,
		/* 315 */ YY_NO_ANCHOR,
		/* 316 */ YY_NO_ANCHOR,
		/* 317 */ YY_NO_ANCHOR,
		/* 318 */ YY_NO_ANCHOR,
		/* 319 */ YY_NO_ANCHOR,
		/* 320 */ YY_NO_ANCHOR,
		/* 321 */ YY_NO_ANCHOR,
		/* 322 */ YY_NO_ANCHOR,
		/* 323 */ YY_NO_ANCHOR,
		/* 324 */ YY_NO_ANCHOR,
		/* 325 */ YY_NO_ANCHOR,
		/* 326 */ YY_NO_ANCHOR,
		/* 327 */ YY_NO_ANCHOR,
		/* 328 */ YY_NO_ANCHOR,
		/* 329 */ YY_NO_ANCHOR,
		/* 330 */ YY_NO_ANCHOR,
		/* 331 */ YY_NO_ANCHOR,
		/* 332 */ YY_NO_ANCHOR,
		/* 333 */ YY_NO_ANCHOR,
		/* 334 */ YY_NO_ANCHOR,
		/* 335 */ YY_NO_ANCHOR,
		/* 336 */ YY_NO_ANCHOR,
		/* 337 */ YY_NO_ANCHOR,
		/* 338 */ YY_NO_ANCHOR,
		/* 339 */ YY_NO_ANCHOR,
		/* 340 */ YY_NO_ANCHOR,
		/* 341 */ YY_NO_ANCHOR,
		/* 342 */ YY_NO_ANCHOR,
		/* 343 */ YY_NO_ANCHOR,
		/* 344 */ YY_NO_ANCHOR,
		/* 345 */ YY_NO_ANCHOR,
		/* 346 */ YY_NO_ANCHOR,
		/* 347 */ YY_NO_ANCHOR,
		/* 348 */ YY_NO_ANCHOR,
		/* 349 */ YY_NO_ANCHOR,
		/* 350 */ YY_NO_ANCHOR,
		/* 351 */ YY_NO_ANCHOR,
		/* 352 */ YY_NO_ANCHOR,
		/* 353 */ YY_NO_ANCHOR,
		/* 354 */ YY_NO_ANCHOR,
		/* 355 */ YY_NO_ANCHOR,
		/* 356 */ YY_NO_ANCHOR,
		/* 357 */ YY_NO_ANCHOR,
		/* 358 */ YY_NO_ANCHOR,
		/* 359 */ YY_NO_ANCHOR,
		/* 360 */ YY_NO_ANCHOR,
		/* 361 */ YY_NO_ANCHOR,
		/* 362 */ YY_NO_ANCHOR,
		/* 363 */ YY_NO_ANCHOR,
		/* 364 */ YY_NO_ANCHOR,
		/* 365 */ YY_NO_ANCHOR,
		/* 366 */ YY_NO_ANCHOR,
		/* 367 */ YY_NO_ANCHOR,
		/* 368 */ YY_NO_ANCHOR,
		/* 369 */ YY_NO_ANCHOR,
		/* 370 */ YY_NO_ANCHOR,
		/* 371 */ YY_NO_ANCHOR,
		/* 372 */ YY_NO_ANCHOR,
		/* 373 */ YY_NO_ANCHOR,
		/* 374 */ YY_NO_ANCHOR,
		/* 375 */ YY_NO_ANCHOR,
		/* 376 */ YY_NO_ANCHOR,
		/* 377 */ YY_NO_ANCHOR,
		/* 378 */ YY_NO_ANCHOR,
		/* 379 */ YY_NO_ANCHOR,
		/* 380 */ YY_NO_ANCHOR,
		/* 381 */ YY_NO_ANCHOR,
		/* 382 */ YY_NO_ANCHOR,
		/* 383 */ YY_NO_ANCHOR,
		/* 384 */ YY_NO_ANCHOR,
		/* 385 */ YY_NO_ANCHOR,
		/* 386 */ YY_NO_ANCHOR,
		/* 387 */ YY_NO_ANCHOR,
		/* 388 */ YY_NO_ANCHOR,
		/* 389 */ YY_NO_ANCHOR,
		/* 390 */ YY_NO_ANCHOR,
		/* 391 */ YY_NO_ANCHOR,
		/* 392 */ YY_NO_ANCHOR,
		/* 393 */ YY_NO_ANCHOR,
		/* 394 */ YY_NO_ANCHOR,
		/* 395 */ YY_NO_ANCHOR,
		/* 396 */ YY_NO_ANCHOR,
		/* 397 */ YY_NO_ANCHOR,
		/* 398 */ YY_NO_ANCHOR,
		/* 399 */ YY_NO_ANCHOR,
		/* 400 */ YY_NO_ANCHOR,
		/* 401 */ YY_NO_ANCHOR,
		/* 402 */ YY_NO_ANCHOR,
		/* 403 */ YY_NO_ANCHOR,
		/* 404 */ YY_NO_ANCHOR,
		/* 405 */ YY_NO_ANCHOR,
		/* 406 */ YY_NO_ANCHOR,
		/* 407 */ YY_NO_ANCHOR,
		/* 408 */ YY_NO_ANCHOR,
		/* 409 */ YY_NO_ANCHOR,
		/* 410 */ YY_NO_ANCHOR,
		/* 411 */ YY_NO_ANCHOR,
		/* 412 */ YY_NO_ANCHOR,
		/* 413 */ YY_NO_ANCHOR,
		/* 414 */ YY_NO_ANCHOR,
		/* 415 */ YY_NO_ANCHOR,
		/* 416 */ YY_NO_ANCHOR,
		/* 417 */ YY_NO_ANCHOR,
		/* 418 */ YY_NO_ANCHOR,
		/* 419 */ YY_NO_ANCHOR,
		/* 420 */ YY_NO_ANCHOR,
		/* 421 */ YY_NO_ANCHOR,
		/* 422 */ YY_NO_ANCHOR,
		/* 423 */ YY_NO_ANCHOR,
		/* 424 */ YY_NO_ANCHOR,
		/* 425 */ YY_NO_ANCHOR,
		/* 426 */ YY_NO_ANCHOR,
		/* 427 */ YY_NO_ANCHOR,
		/* 428 */ YY_NO_ANCHOR,
		/* 429 */ YY_NO_ANCHOR,
		/* 430 */ YY_NO_ANCHOR,
		/* 431 */ YY_NO_ANCHOR,
		/* 432 */ YY_NO_ANCHOR,
		/* 433 */ YY_NO_ANCHOR,
		/* 434 */ YY_NO_ANCHOR,
		/* 435 */ YY_NO_ANCHOR,
		/* 436 */ YY_NO_ANCHOR,
		/* 437 */ YY_NO_ANCHOR,
		/* 438 */ YY_NO_ANCHOR,
		/* 439 */ YY_NO_ANCHOR,
		/* 440 */ YY_NO_ANCHOR,
		/* 441 */ YY_NO_ANCHOR,
		/* 442 */ YY_NO_ANCHOR,
		/* 443 */ YY_NO_ANCHOR,
		/* 444 */ YY_NO_ANCHOR,
		/* 445 */ YY_NO_ANCHOR,
		/* 446 */ YY_NO_ANCHOR,
		/* 447 */ YY_NO_ANCHOR,
		/* 448 */ YY_NO_ANCHOR,
		/* 449 */ YY_NO_ANCHOR,
		/* 450 */ YY_NO_ANCHOR,
		/* 451 */ YY_NO_ANCHOR,
		/* 452 */ YY_NO_ANCHOR,
		/* 453 */ YY_NO_ANCHOR,
		/* 454 */ YY_NO_ANCHOR,
		/* 455 */ YY_NO_ANCHOR,
		/* 456 */ YY_NO_ANCHOR,
		/* 457 */ YY_NO_ANCHOR,
		/* 458 */ YY_NO_ANCHOR,
		/* 459 */ YY_NO_ANCHOR,
		/* 460 */ YY_NO_ANCHOR,
		/* 461 */ YY_NO_ANCHOR,
		/* 462 */ YY_NO_ANCHOR,
		/* 463 */ YY_NO_ANCHOR,
		/* 464 */ YY_NO_ANCHOR,
		/* 465 */ YY_NO_ANCHOR,
		/* 466 */ YY_NO_ANCHOR,
		/* 467 */ YY_NO_ANCHOR,
		/* 468 */ YY_NO_ANCHOR,
		/* 469 */ YY_NO_ANCHOR,
		/* 470 */ YY_NO_ANCHOR,
		/* 471 */ YY_NO_ANCHOR,
		/* 472 */ YY_NO_ANCHOR,
		/* 473 */ YY_NO_ANCHOR,
		/* 474 */ YY_NO_ANCHOR,
		/* 475 */ YY_NO_ANCHOR,
		/* 476 */ YY_NO_ANCHOR,
		/* 477 */ YY_NO_ANCHOR,
		/* 478 */ YY_NO_ANCHOR,
		/* 479 */ YY_NO_ANCHOR,
		/* 480 */ YY_NO_ANCHOR,
		/* 481 */ YY_NO_ANCHOR,
		/* 482 */ YY_NO_ANCHOR,
		/* 483 */ YY_NO_ANCHOR,
		/* 484 */ YY_NO_ANCHOR,
		/* 485 */ YY_NO_ANCHOR,
		/* 486 */ YY_NO_ANCHOR,
		/* 487 */ YY_NO_ANCHOR,
		/* 488 */ YY_NO_ANCHOR,
		/* 489 */ YY_NO_ANCHOR,
		/* 490 */ YY_NO_ANCHOR,
		/* 491 */ YY_NO_ANCHOR,
		/* 492 */ YY_NO_ANCHOR,
		/* 493 */ YY_NO_ANCHOR,
		/* 494 */ YY_NO_ANCHOR,
		/* 495 */ YY_NO_ANCHOR,
		/* 496 */ YY_NO_ANCHOR,
		/* 497 */ YY_NO_ANCHOR,
		/* 498 */ YY_NO_ANCHOR,
		/* 499 */ YY_NO_ANCHOR,
		/* 500 */ YY_NO_ANCHOR,
		/* 501 */ YY_NO_ANCHOR,
		/* 502 */ YY_NO_ANCHOR,
		/* 503 */ YY_NO_ANCHOR,
		/* 504 */ YY_NO_ANCHOR,
		/* 505 */ YY_NO_ANCHOR,
		/* 506 */ YY_NO_ANCHOR,
		/* 507 */ YY_NO_ANCHOR,
		/* 508 */ YY_NO_ANCHOR,
		/* 509 */ YY_NO_ANCHOR,
		/* 510 */ YY_NO_ANCHOR,
		/* 511 */ YY_NO_ANCHOR,
		/* 512 */ YY_NO_ANCHOR,
		/* 513 */ YY_NO_ANCHOR,
		/* 514 */ YY_NO_ANCHOR,
		/* 515 */ YY_NO_ANCHOR,
		/* 516 */ YY_NO_ANCHOR,
		/* 517 */ YY_NO_ANCHOR,
		/* 518 */ YY_NO_ANCHOR,
		/* 519 */ YY_NO_ANCHOR,
		/* 520 */ YY_NO_ANCHOR,
		/* 521 */ YY_NO_ANCHOR,
		/* 522 */ YY_NO_ANCHOR,
		/* 523 */ YY_NO_ANCHOR,
		/* 524 */ YY_NO_ANCHOR,
		/* 525 */ YY_NO_ANCHOR,
		/* 526 */ YY_NO_ANCHOR,
		/* 527 */ YY_NO_ANCHOR,
		/* 528 */ YY_NO_ANCHOR,
		/* 529 */ YY_NO_ANCHOR,
		/* 530 */ YY_NO_ANCHOR,
		/* 531 */ YY_NO_ANCHOR,
		/* 532 */ YY_NO_ANCHOR,
		/* 533 */ YY_NO_ANCHOR,
		/* 534 */ YY_NO_ANCHOR,
		/* 535 */ YY_NO_ANCHOR,
		/* 536 */ YY_NO_ANCHOR,
		/* 537 */ YY_NO_ANCHOR,
		/* 538 */ YY_NO_ANCHOR,
		/* 539 */ YY_NO_ANCHOR,
		/* 540 */ YY_NO_ANCHOR,
		/* 541 */ YY_NO_ANCHOR,
		/* 542 */ YY_NO_ANCHOR,
		/* 543 */ YY_NO_ANCHOR,
		/* 544 */ YY_NO_ANCHOR,
		/* 545 */ YY_NO_ANCHOR,
		/* 546 */ YY_NO_ANCHOR,
		/* 547 */ YY_NO_ANCHOR,
		/* 548 */ YY_NO_ANCHOR,
		/* 549 */ YY_NO_ANCHOR,
		/* 550 */ YY_NO_ANCHOR,
		/* 551 */ YY_NO_ANCHOR,
		/* 552 */ YY_NO_ANCHOR,
		/* 553 */ YY_NO_ANCHOR,
		/* 554 */ YY_NO_ANCHOR,
		/* 555 */ YY_NO_ANCHOR,
		/* 556 */ YY_NO_ANCHOR,
		/* 557 */ YY_NO_ANCHOR,
		/* 558 */ YY_NO_ANCHOR,
		/* 559 */ YY_NO_ANCHOR,
		/* 560 */ YY_NO_ANCHOR,
		/* 561 */ YY_NO_ANCHOR,
		/* 562 */ YY_NO_ANCHOR,
		/* 563 */ YY_NO_ANCHOR,
		/* 564 */ YY_NO_ANCHOR,
		/* 565 */ YY_NO_ANCHOR,
		/* 566 */ YY_NO_ANCHOR,
		/* 567 */ YY_NO_ANCHOR,
		/* 568 */ YY_NO_ANCHOR,
		/* 569 */ YY_NO_ANCHOR,
		/* 570 */ YY_NO_ANCHOR,
		/* 571 */ YY_NO_ANCHOR,
		/* 572 */ YY_NO_ANCHOR,
		/* 573 */ YY_NO_ANCHOR,
		/* 574 */ YY_NO_ANCHOR,
		/* 575 */ YY_NO_ANCHOR,
		/* 576 */ YY_NO_ANCHOR,
		/* 577 */ YY_NO_ANCHOR,
		/* 578 */ YY_NO_ANCHOR,
		/* 579 */ YY_NO_ANCHOR,
		/* 580 */ YY_NO_ANCHOR,
		/* 581 */ YY_NO_ANCHOR,
		/* 582 */ YY_NO_ANCHOR,
		/* 583 */ YY_NO_ANCHOR,
		/* 584 */ YY_NO_ANCHOR,
		/* 585 */ YY_NO_ANCHOR,
		/* 586 */ YY_NO_ANCHOR,
		/* 587 */ YY_NO_ANCHOR,
		/* 588 */ YY_NO_ANCHOR,
		/* 589 */ YY_NO_ANCHOR,
		/* 590 */ YY_NO_ANCHOR,
		/* 591 */ YY_NO_ANCHOR,
		/* 592 */ YY_NO_ANCHOR,
		/* 593 */ YY_NO_ANCHOR,
		/* 594 */ YY_NO_ANCHOR,
		/* 595 */ YY_NO_ANCHOR,
		/* 596 */ YY_NO_ANCHOR,
		/* 597 */ YY_NO_ANCHOR,
		/* 598 */ YY_NO_ANCHOR,
		/* 599 */ YY_NO_ANCHOR,
		/* 600 */ YY_NO_ANCHOR,
		/* 601 */ YY_NO_ANCHOR,
		/* 602 */ YY_NO_ANCHOR,
		/* 603 */ YY_NO_ANCHOR,
		/* 604 */ YY_NO_ANCHOR,
		/* 605 */ YY_NO_ANCHOR,
		/* 606 */ YY_NO_ANCHOR,
		/* 607 */ YY_NO_ANCHOR,
		/* 608 */ YY_NO_ANCHOR,
		/* 609 */ YY_NO_ANCHOR,
		/* 610 */ YY_NO_ANCHOR,
		/* 611 */ YY_NO_ANCHOR,
		/* 612 */ YY_NO_ANCHOR,
		/* 613 */ YY_NO_ANCHOR,
		/* 614 */ YY_NO_ANCHOR,
		/* 615 */ YY_NO_ANCHOR,
		/* 616 */ YY_NO_ANCHOR,
		/* 617 */ YY_NO_ANCHOR,
		/* 618 */ YY_NO_ANCHOR,
		/* 619 */ YY_NO_ANCHOR,
		/* 620 */ YY_NO_ANCHOR,
		/* 621 */ YY_NO_ANCHOR,
		/* 622 */ YY_NO_ANCHOR,
		/* 623 */ YY_NO_ANCHOR,
		/* 624 */ YY_NO_ANCHOR,
		/* 625 */ YY_NO_ANCHOR,
		/* 626 */ YY_NO_ANCHOR,
		/* 627 */ YY_NO_ANCHOR,
		/* 628 */ YY_NO_ANCHOR,
		/* 629 */ YY_NO_ANCHOR,
		/* 630 */ YY_NO_ANCHOR,
		/* 631 */ YY_NO_ANCHOR,
		/* 632 */ YY_NO_ANCHOR,
		/* 633 */ YY_NO_ANCHOR,
		/* 634 */ YY_NO_ANCHOR,
		/* 635 */ YY_NO_ANCHOR,
		/* 636 */ YY_NO_ANCHOR,
		/* 637 */ YY_NO_ANCHOR,
		/* 638 */ YY_NO_ANCHOR,
		/* 639 */ YY_NO_ANCHOR,
		/* 640 */ YY_NO_ANCHOR,
		/* 641 */ YY_NO_ANCHOR,
		/* 642 */ YY_NO_ANCHOR,
		/* 643 */ YY_NO_ANCHOR,
		/* 644 */ YY_NO_ANCHOR,
		/* 645 */ YY_NO_ANCHOR,
		/* 646 */ YY_NO_ANCHOR,
		/* 647 */ YY_NO_ANCHOR,
		/* 648 */ YY_NO_ANCHOR,
		/* 649 */ YY_NO_ANCHOR,
		/* 650 */ YY_NO_ANCHOR,
		/* 651 */ YY_NO_ANCHOR,
		/* 652 */ YY_NO_ANCHOR,
		/* 653 */ YY_NO_ANCHOR,
		/* 654 */ YY_NO_ANCHOR,
		/* 655 */ YY_NO_ANCHOR,
		/* 656 */ YY_NO_ANCHOR,
		/* 657 */ YY_NO_ANCHOR,
		/* 658 */ YY_NO_ANCHOR,
		/* 659 */ YY_NO_ANCHOR,
		/* 660 */ YY_NO_ANCHOR,
		/* 661 */ YY_NO_ANCHOR,
		/* 662 */ YY_NO_ANCHOR,
		/* 663 */ YY_NO_ANCHOR,
		/* 664 */ YY_NO_ANCHOR,
		/* 665 */ YY_NO_ANCHOR,
		/* 666 */ YY_NO_ANCHOR,
		/* 667 */ YY_NO_ANCHOR,
		/* 668 */ YY_NO_ANCHOR,
		/* 669 */ YY_NO_ANCHOR,
		/* 670 */ YY_NO_ANCHOR,
		/* 671 */ YY_NO_ANCHOR,
		/* 672 */ YY_NO_ANCHOR,
		/* 673 */ YY_NO_ANCHOR,
		/* 674 */ YY_NO_ANCHOR,
		/* 675 */ YY_NO_ANCHOR,
		/* 676 */ YY_NO_ANCHOR,
		/* 677 */ YY_NO_ANCHOR,
		/* 678 */ YY_NO_ANCHOR,
		/* 679 */ YY_NO_ANCHOR,
		/* 680 */ YY_NO_ANCHOR,
		/* 681 */ YY_NO_ANCHOR,
		/* 682 */ YY_NO_ANCHOR,
		/* 683 */ YY_NO_ANCHOR,
		/* 684 */ YY_NO_ANCHOR,
		/* 685 */ YY_NO_ANCHOR,
		/* 686 */ YY_NO_ANCHOR,
		/* 687 */ YY_NO_ANCHOR,
		/* 688 */ YY_NO_ANCHOR,
		/* 689 */ YY_NO_ANCHOR,
		/* 690 */ YY_NO_ANCHOR,
		/* 691 */ YY_NO_ANCHOR,
		/* 692 */ YY_NO_ANCHOR,
		/* 693 */ YY_NO_ANCHOR,
		/* 694 */ YY_NO_ANCHOR,
		/* 695 */ YY_NO_ANCHOR,
		/* 696 */ YY_NO_ANCHOR,
		/* 697 */ YY_NO_ANCHOR,
		/* 698 */ YY_NO_ANCHOR,
		/* 699 */ YY_NO_ANCHOR,
		/* 700 */ YY_NO_ANCHOR,
		/* 701 */ YY_NO_ANCHOR,
		/* 702 */ YY_NO_ANCHOR,
		/* 703 */ YY_NO_ANCHOR,
		/* 704 */ YY_NO_ANCHOR,
		/* 705 */ YY_NO_ANCHOR,
		/* 706 */ YY_NO_ANCHOR,
		/* 707 */ YY_NO_ANCHOR,
		/* 708 */ YY_NO_ANCHOR,
		/* 709 */ YY_NO_ANCHOR,
		/* 710 */ YY_NO_ANCHOR,
		/* 711 */ YY_NO_ANCHOR,
		/* 712 */ YY_NO_ANCHOR,
		/* 713 */ YY_NO_ANCHOR,
		/* 714 */ YY_NO_ANCHOR,
		/* 715 */ YY_NO_ANCHOR,
		/* 716 */ YY_NO_ANCHOR,
		/* 717 */ YY_NO_ANCHOR,
		/* 718 */ YY_NO_ANCHOR,
		/* 719 */ YY_NO_ANCHOR,
		/* 720 */ YY_NO_ANCHOR,
		/* 721 */ YY_NO_ANCHOR,
		/* 722 */ YY_NO_ANCHOR,
		/* 723 */ YY_NO_ANCHOR,
		/* 724 */ YY_NO_ANCHOR,
		/* 725 */ YY_NO_ANCHOR,
		/* 726 */ YY_NO_ANCHOR,
		/* 727 */ YY_NO_ANCHOR,
		/* 728 */ YY_NO_ANCHOR,
		/* 729 */ YY_NO_ANCHOR,
		/* 730 */ YY_NO_ANCHOR,
		/* 731 */ YY_NO_ANCHOR,
		/* 732 */ YY_NO_ANCHOR,
		/* 733 */ YY_NO_ANCHOR,
		/* 734 */ YY_NO_ANCHOR,
		/* 735 */ YY_NO_ANCHOR,
		/* 736 */ YY_NO_ANCHOR,
		/* 737 */ YY_NO_ANCHOR,
		/* 738 */ YY_NO_ANCHOR,
		/* 739 */ YY_NO_ANCHOR,
		/* 740 */ YY_NO_ANCHOR,
		/* 741 */ YY_NO_ANCHOR,
		/* 742 */ YY_NO_ANCHOR,
		/* 743 */ YY_NO_ANCHOR,
		/* 744 */ YY_NO_ANCHOR,
		/* 745 */ YY_NO_ANCHOR,
		/* 746 */ YY_NO_ANCHOR,
		/* 747 */ YY_NO_ANCHOR,
		/* 748 */ YY_NO_ANCHOR,
		/* 749 */ YY_NO_ANCHOR,
		/* 750 */ YY_NO_ANCHOR,
		/* 751 */ YY_NO_ANCHOR,
		/* 752 */ YY_NO_ANCHOR,
		/* 753 */ YY_NO_ANCHOR,
		/* 754 */ YY_NO_ANCHOR,
		/* 755 */ YY_NO_ANCHOR,
		/* 756 */ YY_NO_ANCHOR,
		/* 757 */ YY_NO_ANCHOR,
		/* 758 */ YY_NO_ANCHOR,
		/* 759 */ YY_NO_ANCHOR,
		/* 760 */ YY_NO_ANCHOR,
		/* 761 */ YY_NO_ANCHOR,
		/* 762 */ YY_NO_ANCHOR,
		/* 763 */ YY_NO_ANCHOR,
		/* 764 */ YY_NO_ANCHOR,
		/* 765 */ YY_NO_ANCHOR,
		/* 766 */ YY_NO_ANCHOR,
		/* 767 */ YY_NO_ANCHOR,
		/* 768 */ YY_NO_ANCHOR,
		/* 769 */ YY_NO_ANCHOR,
		/* 770 */ YY_NO_ANCHOR,
		/* 771 */ YY_NO_ANCHOR,
		/* 772 */ YY_NO_ANCHOR,
		/* 773 */ YY_NO_ANCHOR,
		/* 774 */ YY_NO_ANCHOR,
		/* 775 */ YY_NO_ANCHOR,
		/* 776 */ YY_NO_ANCHOR,
		/* 777 */ YY_NO_ANCHOR,
		/* 778 */ YY_NO_ANCHOR,
		/* 779 */ YY_NO_ANCHOR,
		/* 780 */ YY_NO_ANCHOR,
		/* 781 */ YY_NO_ANCHOR,
		/* 782 */ YY_NO_ANCHOR,
		/* 783 */ YY_NO_ANCHOR,
		/* 784 */ YY_NO_ANCHOR,
		/* 785 */ YY_NO_ANCHOR,
		/* 786 */ YY_NO_ANCHOR,
		/* 787 */ YY_NO_ANCHOR,
		/* 788 */ YY_NO_ANCHOR,
		/* 789 */ YY_NO_ANCHOR,
		/* 790 */ YY_NO_ANCHOR,
		/* 791 */ YY_NO_ANCHOR,
		/* 792 */ YY_NO_ANCHOR,
		/* 793 */ YY_NO_ANCHOR
	};
	private int yy_cmap[] = unpackFromString(1,65538,
"54:9,63,52,54,63,51,54:18,63,55,56,55:4,62,12,14,53,55,13,59,11,18,58:10,8," +
"55,9,15,10,55,1,19,60,21,39,41,60:3,42,60:2,45,47,25,40,20,60,29,37,48,60,3" +
"3,60:4,16,57,17,55,62,55,23,34,32,43,4,5,36,49,6,38,60,22,46,28,26,2,31,3,2" +
"4,30,27,35,50,7,44,60,55:3,54:66,61:23,54,61:31,54,61:8,54:65280,0:2")[0];

	private int yy_rmap[] = unpackFromString(1,794,
"0,1,2,3:2,1,3:4,4,3:2,5,1,6,1,3,7:5,1,7:19,3,7:67,1:11,8,9,10,11,12,13,14,1" +
"5,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,4" +
"0,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,6" +
"5,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,9" +
"0,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,11" +
"1,112,113,7,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129" +
",130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,14" +
"8,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,1" +
"67,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185," +
"186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204" +
",205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,22" +
"3,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,2" +
"42,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260," +
"261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279" +
",280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,29" +
"8,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,3" +
"17,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335," +
"336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354" +
",355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,37" +
"3,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,3" +
"92,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410," +
"411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429" +
",430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,44" +
"8,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,4" +
"67,468,469,470,471,472,473,7,474,475,476,477,478,479,480,481,482,483,484,48" +
"5,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,5" +
"04,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522," +
"523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541" +
",542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,56" +
"0,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,5" +
"79,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597," +
"598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616" +
",617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,63" +
"5,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,6" +
"54,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,3,67" +
"2,673,674,671,675")[0];

	private int yy_nxt[][] = unpackFromString(676,64,
"1,2,123,520,589,223,624,589,3,4,5,6,7,8,9,10,11,12,13,126,224,652,589,128,6" +
"73,130,690,589,701,706,709,589,711,132,713,715,717,719,589,721,589,723,724," +
"725,589,726,589:4,727,14:2,788,-1,788:2,-1,793,788,589,15,788,14,-1:65,788," +
"772,788:7,-1,788:40,-1:2,788,-1,788:2,-1,788:3,-1,788,-1:2,788:9,-1,788:40," +
"-1:2,788,-1,788:2,-1,788:3,-1,788,-1:2,788:9,16,788:40,-1:2,788,-1,788:2,-1" +
",788:3,-1,788,-1:2,788:9,-1,788:7,134,788:32,-1:2,17,-1,788:2,-1,788:3,-1,7" +
"88,-1:3,15:6,-1:11,15:32,-1:7,15,-1,15:3,-1:2,788,589:6,788:2,-1,788:8,589:" +
"32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,122:51,23,122:11,-1,788,589" +
",728,589:4,788:2,-1,788:8,589:3,729,225,589:2,226,227,589:23,-1:2,788,-1,78" +
"8:2,-1,228,788,589,15,228,-1:19,113,-1:45,1,111:50,-1,112,124,111:10,-1,788" +
",589:6,788:2,-1,788:8,589,18,589:30,-1:2,788,-1,788:2,-1,228,788,589,15,228" +
",-1,1,-1:64,788,589,523,589:4,788:2,-1,788:8,589:5,19,589:7,238,589:10,239," +
"589:7,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1,1,114:50,-1:2,114:3,115,11" +
"6,114:6,-1,788,589:6,788:2,-1,788:8,589,20,589:2,242,589:27,-1:2,788,-1,788" +
":2,-1,228,788,589,15,228,-1,1,117:27,118,117,119,117:20,-1:2,117:3,120,121," +
"117:6,-1,788,589:6,788:2,-1,788:8,589,21,589:30,-1:2,788,-1,788:2,-1,228,78" +
"8,589,15,228,-1:2,788,589,22,589:4,788:2,-1,788:8,589:32,-1:2,788,-1,788:2," +
"-1,228,788,589,15,228,-1:2,134:9,122,134:40,122,23,134,122,134:2,122,134:3," +
"122,134,122,-1,788,589:6,788:2,-1,788:8,589,24,589:30,-1:2,788,-1,788:2,-1," +
"228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,25,589:20,-1:2,788," +
"-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,26,589:3,788:2,-1,788:8,589:3" +
"2,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589" +
":9,27,589:22,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-" +
"1,788:8,589:15,28,589:16,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,5" +
"89:6,788:2,-1,788:8,589:3,29,589:28,-1:2,788,-1,788:2,-1,228,788,589,15,228" +
",-1:2,788,589:6,788:2,-1,788:8,589:30,30,589,-1:2,788,-1,788:2,-1,228,788,5" +
"89,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,31,589:20,-1:2,788,-1,788:2," +
"-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:30,32,589,-1:2,788," +
"-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:13,33,589:" +
"18,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,58" +
"9:5,34,589:26,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2," +
"-1,788:8,589:9,35,589:22,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,5" +
"89:6,788:2,-1,788:8,589:4,36,589:27,-1:2,788,-1,788:2,-1,228,788,589,15,228" +
",-1:2,788,589:6,788:2,-1,788:8,589:3,37,589:28,-1:2,788,-1,788:2,-1,228,788" +
",589,15,228,-1:2,788,589:2,38,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2" +
",-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:15,39,589:16,-1:2," +
"788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:4,40,5" +
"89:27,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8" +
",589:11,41,589:20,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,42" +
",589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,7" +
"88:6,43,788:2,-1,788:40,-1:2,788,-1,788:2,-1,788:3,-1,788,-1:2,788,589:6,78" +
"8:2,-1,788:8,589:11,44,589:20,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2," +
"788,589:6,788:2,-1,788:8,589:19,45,589:12,-1:2,788,-1,788:2,-1,228,788,589," +
"15,228,-1:2,788,589:6,788:2,-1,788:8,589:9,46,589:22,-1:2,788,-1,788:2,-1,2" +
"28,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:19,47,589:12,-1:2,788,-" +
"1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,48,589:2" +
"0,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,49,589:3,788:2,-1," +
"788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-" +
"1,788:8,589:3,50,589:28,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,58" +
"9:6,788:2,-1,788:8,589:3,51,589:28,-1:2,788,-1,788:2,-1,228,788,589,15,228," +
"-1:2,788,589:6,788:2,-1,788:8,589:11,52,589:20,-1:2,788,-1,788:2,-1,228,788" +
",589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:9,53,589:22,-1:2,788,-1,788:2" +
",-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:25,54,589:6,-1:2,7" +
"88,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:19,55,5" +
"89:12,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,56,589:3,788:2" +
",-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589,57,58" +
"9:4,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788," +
"589:6,788:2,-1,788:8,589:3,58,589:28,-1:2,788,-1,788:2,-1,228,788,589,15,22" +
"8,-1:2,788,589:6,788:2,-1,788:8,589:13,59,589:18,-1:2,788,-1,788:2,-1,228,7" +
"88,589,15,228,-1:2,788,589:2,60,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788" +
":2,-1,228,788,589,15,228,-1:2,788,589:2,61,589:3,788:2,-1,788:8,589:32,-1:2" +
",788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,62" +
",589:20,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788" +
":8,589:9,63,589:22,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,6" +
"4,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2," +
"788,589:6,788:2,-1,788:8,589:9,65,589:22,-1:2,788,-1,788:2,-1,228,788,589,1" +
"5,228,-1:2,788,589:6,788:2,-1,788:8,589:11,66,589:20,-1:2,788,-1,788:2,-1,2" +
"28,788,589,15,228,-1:2,788,589:2,67,589:3,788:2,-1,788:8,589:32,-1:2,788,-1" +
",788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:15,68,589:16" +
",-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:" +
"15,69,589:16,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,70,589:" +
"3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,58" +
"9:2,71,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228," +
"-1:2,788,589:2,72,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788," +
"589,15,228,-1:2,788,589:2,73,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2," +
"-1,228,788,589,15,228,-1:2,788,589:2,74,589:3,788:2,-1,788:8,589:32,-1:2,78" +
"8,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:9,75,589" +
":22,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,76,589:3,788:2,-" +
"1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589,77,589:" +
"4,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,58" +
"9:6,788:2,-1,788:8,589:9,78,589:22,-1:2,788,-1,788:2,-1,228,788,589,15,228," +
"-1:2,788,589:6,788:2,-1,788:8,589:9,79,589:22,-1:2,788,-1,788:2,-1,228,788," +
"589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:9,80,589:22,-1:2,788,-1,788:2," +
"-1,228,788,589,15,228,-1:2,788,589:2,81,589:3,788:2,-1,788:8,589:32,-1:2,78" +
"8,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,82,589:3,788:2,-1,788:8,589" +
":32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,5" +
"89:9,83,589:22,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2" +
",-1,788:8,589:9,84,589:22,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788," +
"589:6,788:2,-1,788:8,589:3,85,589:28,-1:2,788,-1,788:2,-1,228,788,589,15,22" +
"8,-1:2,788,589:2,86,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,78" +
"8,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:9,87,589:22,-1:2,788,-1,788:" +
"2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:7,88,589:24,-1:2," +
"788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:9,89,5" +
"89:22,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8" +
",589:9,90,589:22,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788" +
":2,-1,788:8,589:11,91,589:20,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,7" +
"88,589:6,788:2,-1,788:8,589:17,92,589:14,-1:2,788,-1,788:2,-1,228,788,589,1" +
"5,228,-1:2,788,589:6,788:2,-1,788:8,589:17,93,589:14,-1:2,788,-1,788:2,-1,2" +
"28,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,94,589:20,-1:2,788,-" +
"1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:9,95,589:22" +
",-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:" +
"9,96,589:22,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1" +
",788:8,589:11,97,589:20,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,58" +
"9:6,788:2,-1,788:8,589:15,98,589:16,-1:2,788,-1,788:2,-1,228,788,589,15,228" +
",-1:2,788,589:2,99,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788" +
",589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,100,589:20,-1:2,788,-1,788" +
":2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,101,589:20,-1" +
":2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11," +
"102,589:20,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1," +
"788:8,589:9,103,589:22,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589" +
":2,104,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228," +
"-1:2,788,589:6,788:2,-1,788:8,589:11,105,589:20,-1:2,788,-1,788:2,-1,228,78" +
"8,589,15,228,-1:2,788,589:2,106,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788" +
":2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:9,107,589:22,-1:" +
"2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,108,589:3,788:2,-1,788:" +
"8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,109,589:3,7" +
"88:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2" +
",110,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1" +
":2,788:5,154,788:3,-1,788:40,-1:2,788,-1,788:2,-1,788:3,-1,788,-1:2,788,589" +
":4,230,589,788:2,-1,788:8,589:7,133,231,589:23,-1:2,788,-1,788:2,-1,228,788" +
",589,15,228,-1:2,788,589,234,589:4,788:2,-1,788:8,589:6,135,235,589:24,-1:2" +
",788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589,653,589:4,788:2,-1,788:8,5" +
"89:5,136,589:26,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:4,258," +
"589,788:2,-1,788:8,589:5,674,589:26,-1:2,788,-1,788:2,-1,228,788,589,15,228" +
",-1:2,788,589:6,788:2,-1,788:8,589:9,526,589:22,-1:2,788,-1,788:2,-1,228,78" +
"8,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:3,675,589,691,589:26,-1:2,78" +
"8,-1,788:2,-1,228,788,589,15,228,-1:2,788,589,524,589:4,788:2,-1,788:8,589:" +
"32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,58" +
"9:11,259,589:20,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:3,528," +
"589:2,788:2,-1,788:8,589:5,260,589:5,529,589:12,595,589:7,-1:2,788,-1,788:2" +
",-1,228,788,589,15,228,-1:2,788,750,589:5,788:2,-1,788:8,589:32,-1:2,788,-1" +
",788:2,-1,228,788,589,15,228,-1:2,788,589:2,261,589:3,788:2,-1,788:8,589:7," +
"532,589:24,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1," +
"788:8,589:5,262,589:26,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589" +
":6,788:2,-1,788:8,589:4,263,589:27,-1:2,788,-1,788:2,-1,228,788,589,15,228," +
"-1:2,788,530,589:5,788:2,-1,788:8,589:9,533,589:22,-1:2,788,-1,788:2,-1,228" +
",788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:13,597,589:18,-1:2,788,-1" +
",788:2,-1,228,788,589,15,228,-1:2,788,264,589:5,788:2,-1,788:8,589:16,596,5" +
"89:2,629,589:12,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:" +
"2,-1,788:8,589:13,265,589:13,655,589:4,-1:2,788,-1,788:2,-1,228,788,589,15," +
"228,-1:2,788,763,589:5,788:2,-1,788:8,589:15,268,589:16,-1:2,788,-1,788:2,-" +
"1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:27,137,589:4,-1:2,78" +
"8,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:8,138,53" +
"1,589:17,749,589:4,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,7" +
"88:2,-1,788:8,589:27,769,589:4,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2" +
",788,589:6,788:2,-1,788:8,589:3,269,589:28,-1:2,788,-1,788:2,-1,228,788,589" +
",15,228,-1:2,788,589:4,271,589,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,2" +
"28,788,589,15,228,-1:2,788,630,589:5,788:2,-1,788:8,589:3,274,589:5,275,589" +
":6,536,589:10,276,589:4,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,58" +
"9,139,589:4,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-" +
"1:2,788,589,657,589:4,788:2,-1,788:8,589:9,278,589:22,-1:2,788,-1,788:2,-1," +
"228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:15,535,589:16,-1:2,788" +
",-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,279,589:3,788:2,-1,788:8,589" +
":32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,5" +
"89:11,280,589:12,540,589:7,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788" +
",589,774,589:4,788:2,-1,788:8,589:4,140,589:27,-1:2,788,-1,788:2,-1,228,788" +
",589,15,228,-1:2,788,589:5,635,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,2" +
"28,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,141,589:20,-1:2,788," +
"-1,788:2,-1,228,788,589,15,228,-1:2,788,731,589:5,788:2,-1,788:8,589:5,606," +
"589:26,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,281,589:5,788:2,-1," +
"788:8,589:9,534,589:5,282,589:16,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1" +
":2,788,589:6,788:2,-1,788:8,589:9,142,589:22,-1:2,788,-1,788:2,-1,228,788,5" +
"89,15,228,-1:2,788,589:6,788:2,-1,788:8,589:8,284,589:23,-1:2,788,-1,788:2," +
"-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,600,589:20,-1:2," +
"788,-1,788:2,-1,228,788,589,15,228,-1:2,788,755,589:5,788:2,-1,788:8,589:32" +
",-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:" +
"5,285,589:5,286,589:20,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589" +
":6,788:2,-1,788:8,589:5,599,589:26,-1:2,788,-1,788:2,-1,228,788,589,15,228," +
"-1:2,788,589:6,788:2,-1,788:8,589:7,659,589:24,-1:2,788,-1,788:2,-1,228,788" +
",589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:7,605,589:24,-1:2,788,-1,788:" +
"2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:17,289,589:14,-1:" +
"2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:5,14" +
"3,589:26,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,78" +
"8:8,589:19,543,589:12,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:" +
"6,788:2,-1,788:8,589:4,291,589:27,-1:2,788,-1,788:2,-1,228,788,589,15,228,-" +
"1:2,788,589:4,144,589,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,58" +
"9,15,228,-1:2,788,589,292,589:4,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1," +
"228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:13,607,589:18,-1:2,788" +
",-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:5,145,589" +
":26,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,5" +
"89:7,146,589:24,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:" +
"2,-1,788:8,589:11,547,589:7,782,589:4,680,589:7,-1:2,788,-1,788:2,-1,228,78" +
"8,589,15,228,-1:2,788,295,589:5,788:2,-1,788:8,589:27,147,589:4,-1:2,788,-1" +
",788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:3,296,589:28" +
",-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:4,732,589,788:2,-1,78" +
"8:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1," +
"788:8,589:9,545,589:22,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589" +
":2,298,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228," +
"-1:2,788,589:2,682,589:3,788:2,-1,788:8,589:18,638,589:2,301,589:10,-1:2,78" +
"8,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:21,303,5" +
"89:10,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8" +
",589:4,148,589:27,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589,149," +
"589:4,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,78" +
"8,589:2,702,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15" +
",228,-1:2,788,770,589:5,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788," +
"589,15,228,-1:2,788,589,150,589:4,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-" +
"1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:2,544,589:29,-1:2,78" +
"8,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:8,312,58" +
"9:23,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8," +
"589:7,552,589:24,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788" +
":2,-1,788:8,589:11,789,589:20,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2," +
"788,589:6,788:2,-1,788:8,589:24,790,589:7,-1:2,788,-1,788:2,-1,228,788,589," +
"15,228,-1:2,788,589,315,589:4,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,22" +
"8,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:3,151,589:28,-1:2,788,-1" +
",788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:4,318,589:27" +
",-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,152,589:3,788:2,-1," +
"788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-" +
"1,788:8,589:13,553,589:18,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788," +
"589,707,589:4,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228" +
",-1:2,788,589:6,788:2,-1,788:8,589:16,153,589:15,-1:2,788,-1,788:2,-1,228,7" +
"88,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:9,155,589:22,-1:2,788,-1,78" +
"8:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:15,156,589:16,-" +
"1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:8," +
"157,589:23,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1," +
"788:8,589:15,158,589:16,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,58" +
"9:4,329,589,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-" +
"1:2,788,589:6,788:2,-1,788:8,589,331,589:30,-1:2,788,-1,788:2,-1,228,788,58" +
"9,15,228,-1:2,788,589:6,788:2,-1,788:8,589:9,159,589:22,-1:2,788,-1,788:2,-" +
"1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:19,555,589:12,-1:2,7" +
"88,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:3,615,589:2,788:2,-1,788:8,5" +
"89:4,767,589:27,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:" +
"2,-1,788:8,589:6,557,589:3,644,589:21,-1:2,788,-1,788:2,-1,228,788,589,15,2" +
"28,-1:2,788,589:6,788:2,-1,788:8,589:12,333,589:19,-1:2,788,-1,788:2,-1,228" +
",788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:3,160,589:28,-1:2,788,-1," +
"788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:3,335,589:28," +
"-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:9" +
",738,589:22,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1" +
",788:8,589:4,161,589:27,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,58" +
"9:6,788:2,-1,788:8,589:4,162,589:27,-1:2,788,-1,788:2,-1,228,788,589,15,228" +
",-1:2,788,589:6,788:2,-1,788:8,589:27,775,589:4,-1:2,788,-1,788:2,-1,228,78" +
"8,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,616,589:20,-1:2,788,-1,78" +
"8:2,-1,228,788,589,15,228,-1:2,788,589,759,589:4,788:2,-1,788:8,589:32,-1:2" +
",788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:24,64" +
"5,589:7,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788" +
":8,589:13,163,589:18,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6" +
",788:2,-1,788:8,589:14,668,589:17,-1:2,788,-1,788:2,-1,228,788,589,15,228,-" +
"1:2,788,589:2,768,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788," +
"589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:27,669,589:4,-1:2,788,-1,788:2" +
",-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:7,164,589:24,-1:2," +
"788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,165" +
",589:20,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788" +
":8,589:15,166,589:16,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:4" +
",344,589,788:2,-1,788:8,589:3,167,589:28,-1:2,788,-1,788:2,-1,228,788,589,1" +
"5,228,-1:2,788,589:6,788:2,-1,788:8,589:4,739,589:27,-1:2,788,-1,788:2,-1,2" +
"28,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:7,345,589:24,-1:2,788,-" +
"1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:13,559,589:" +
"18,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,734,589:3,788:2,-" +
"1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:4,761,5" +
"89,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,5" +
"89:6,788:2,-1,788:8,589:8,352,589:23,-1:2,788,-1,788:2,-1,228,788,589,15,22" +
"8,-1:2,788,589:6,788:2,-1,788:8,589,784,589:30,-1:2,788,-1,788:2,-1,228,788" +
",589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:4,168,589:27,-1:2,788,-1,788:" +
"2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:4,169,589:27,-1:2" +
",788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:4,170,589,788:2,-1,788:8,5" +
"89:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8" +
",589:16,355,589:15,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,7" +
"88:2,-1,788:8,589:16,171,589:15,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:" +
"2,788,589:6,788:2,-1,788:8,360,589:31,-1:2,788,-1,788:2,-1,228,788,589,15,2" +
"28,-1:2,788,589:6,788:2,-1,788:8,589:21,361,589:10,-1:2,788,-1,788:2,-1,228" +
",788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:16,172,589:15,-1:2,788,-1" +
",788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,688,589:2" +
"0,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,363,589:5,788:2,-1,788:8" +
",589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788" +
":8,589:9,563,589:22,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6," +
"788:2,-1,788:8,589:13,742,589:18,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1" +
":2,788,589:6,788:2,-1,788:8,589:13,173,589:18,-1:2,788,-1,788:2,-1,228,788," +
"589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:25,368,589:6,-1:2,788,-1,788:2" +
",-1,228,788,589,15,228,-1:2,788,589:4,369,589,788:2,-1,788:8,589:32,-1:2,78" +
"8,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:8,174,58" +
"9:23,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8," +
"589:3,619,589:28,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,370" +
",589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,7" +
"88,589:6,788:2,-1,788:8,589:16,175,589:15,-1:2,788,-1,788:2,-1,228,788,589," +
"15,228,-1:2,788,589:6,788:2,-1,788:8,589:7,176,589:24,-1:2,788,-1,788:2,-1," +
"228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:4,375,589:27,-1:2,788," +
"-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:7,565,589:" +
"24,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,58" +
"9:9,177,589:22,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2" +
",-1,788:8,589:16,178,589:15,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,78" +
"8,589,179,589:4,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,2" +
"28,-1:2,788,589:6,788:2,-1,788:8,589:24,376,589:7,-1:2,788,-1,788:2,-1,228," +
"788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:15,744,589:16,-1:2,788,-1," +
"788:2,-1,228,788,589,15,228,-1:2,788,589,180,589:4,788:2,-1,788:8,589:32,-1" +
":2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:3,1" +
"81,589:28,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,7" +
"88:8,589:11,672,589:20,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589" +
":6,788:2,-1,788:8,589:16,182,589:15,-1:2,788,-1,788:2,-1,228,788,589,15,228" +
",-1:2,788,589:6,788:2,-1,788:8,589:16,183,589:15,-1:2,788,-1,788:2,-1,228,7" +
"88,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:16,184,589:15,-1:2,788,-1,7" +
"88:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:28,568,589:3,-" +
"1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:16" +
",385,589:15,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1" +
",788:8,589:9,387,589:22,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,58" +
"9:6,788:2,-1,788:8,589:16,185,589:15,-1:2,788,-1,788:2,-1,228,788,589,15,22" +
"8,-1:2,788,589:6,788:2,-1,788:8,589:7,186,589:24,-1:2,788,-1,788:2,-1,228,7" +
"88,589,15,228,-1:2,788,589:4,388,589,788:2,-1,788:8,589:32,-1:2,788,-1,788:" +
"2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:16,187,589:15,-1:" +
"2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589,570,589:4,788:2,-1,788:8," +
"589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:" +
"8,589:19,621,589:12,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6," +
"788:2,-1,788:8,589:21,395,589:10,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1" +
":2,788,589:2,188,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,5" +
"89,15,228,-1:2,788,589:6,788:2,-1,788:8,589:7,189,589:24,-1:2,788,-1,788:2," +
"-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:7,190,589:24,-1:2,7" +
"88,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:3,397,5" +
"89:28,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8" +
",589:24,398,589:7,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,78" +
"8:2,-1,788:8,589:7,191,589:24,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2," +
"788,589:6,788:2,-1,788:8,589:7,400,589:24,-1:2,788,-1,788:2,-1,228,788,589," +
"15,228,-1:2,788,589:2,571,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1," +
"228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,651,589:20,-1:2,788" +
",-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:13,404,58" +
"9:18,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8," +
"589:16,192,589:15,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,78" +
"8:2,-1,788:8,589:16,193,589:15,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2" +
",788,589:6,788:2,-1,788:8,589:7,194,589:24,-1:2,788,-1,788:2,-1,228,788,589" +
",15,228,-1:2,788,589:4,407,589,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,2" +
"28,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:7,195,589:24,-1:2,788,-" +
"1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:4,196,589:2" +
"7,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589" +
":16,197,589:15,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2" +
",-1,788:8,589:15,412,589:16,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,78" +
"8,589:6,788:2,-1,788:8,589:7,198,589:24,-1:2,788,-1,788:2,-1,228,788,589,15" +
",228,-1:2,788,589:6,788:2,-1,788:8,413,589:31,-1:2,788,-1,788:2,-1,228,788," +
"589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:29,199,589:2,-1:2,788,-1,788:2" +
",-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:7,200,589:24,-1:2," +
"788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:9,572," +
"589:22,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:" +
"8,589:24,414,589:7,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,7" +
"88:2,-1,788:8,589:7,416,589:24,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2" +
",788,589:6,788:2,-1,788:8,418,589:17,419,589:13,-1:2,788,-1,788:2,-1,228,78" +
"8,589,15,228,-1:2,788,589:2,420,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788" +
":2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:7,201,589:24,-1:" +
"2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,745,589:" +
"5,574,589:21,575,589:3,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589" +
":6,788:2,-1,788:8,589:11,573,589:20,-1:2,788,-1,788:2,-1,228,788,589,15,228" +
",-1:2,788,589:6,788:2,-1,788:8,589:4,421,589:27,-1:2,788,-1,788:2,-1,228,78" +
"8,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:13,422,589:18,-1:2,788,-1,78" +
"8:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:13,202,589:18,-" +
"1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:16" +
",423,589:15,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1" +
",788:8,589:19,576,589:12,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,5" +
"89,203,589:4,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228," +
"-1:2,788,589:4,425,589,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,5" +
"89,15,228,-1:2,788,589:6,788:2,-1,788:8,589:24,426,589:7,-1:2,788,-1,788:2," +
"-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:9,427,589:22,-1:2,7" +
"88,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:7,428,5" +
"89:24,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589,204,589:4,788:2," +
"-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:" +
"2,-1,788:8,589:8,429,589:23,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,78" +
"8,589:6,788:2,-1,788:8,589:14,623,589:17,-1:2,788,-1,788:2,-1,228,788,589,1" +
"5,228,-1:2,788,589:6,788:2,-1,788:8,589:9,205,589:22,-1:2,788,-1,788:2,-1,2" +
"28,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,432,589:20,-1:2,788," +
"-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,433,589:3,788:2,-1,788:8,589:" +
"32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,58" +
"9:3,435,589:28,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:3,436,5" +
"89:2,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788" +
",589:6,788:2,-1,788:8,589:19,437,589:12,-1:2,788,-1,788:2,-1,228,788,589,15" +
",228,-1:2,788,589:6,788:2,-1,788:8,589:4,438,589:27,-1:2,788,-1,788:2,-1,22" +
"8,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:9,439,589:22,-1:2,788,-1" +
",788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:15,440,589:1" +
"6,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589" +
":8,206,589:23,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2," +
"-1,788:8,589:7,207,589:24,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788," +
"589:4,444,589,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228" +
",-1:2,788,589:6,788:2,-1,788:8,445,589:19,579,446,589:10,-1:2,788,-1,788:2," +
"-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:13,208,589:18,-1:2," +
"788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:21,780" +
",589:10,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788" +
":8,589:25,447,589:6,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6," +
"788:2,-1,788:8,589:8,448,589:23,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:" +
"2,788,589:6,788:2,-1,788:8,589:3,449,589:28,-1:2,788,-1,788:2,-1,228,788,58" +
"9,15,228,-1:2,788,589:6,788:2,-1,788:8,589:4,450,589:27,-1:2,788,-1,788:2,-" +
"1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:19,580,589:12,-1:2,7" +
"88,-1,788:2,-1,228,788,589,15,228,-1:2,788,589,209,589:4,788:2,-1,788:8,589" +
":32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,451,589:3,788:2," +
"-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:" +
"2,-1,788:8,589:11,581,589:20,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,7" +
"88,589:6,788:2,-1,788:8,589:16,210,589:15,-1:2,788,-1,788:2,-1,228,788,589," +
"15,228,-1:2,788,589:6,788:2,-1,788:8,589:24,452,589:7,-1:2,788,-1,788:2,-1," +
"228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:15,791,589:16,-1:2,788" +
",-1,788:2,-1,228,788,589,15,228,-1:2,788,589:4,582,589,788:2,-1,788:8,589:3" +
"2,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589" +
":9,454,589:22,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2," +
"-1,788:8,589:21,455,589:10,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788" +
",589:6,788:2,-1,788:8,589:3,456,589:28,-1:2,788,-1,788:2,-1,228,788,589,15," +
"228,-1:2,788,589:6,788:2,-1,788:8,589:13,583,589:18,-1:2,788,-1,788:2,-1,22" +
"8,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:19,459,589:12,-1:2,788,-" +
"1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,460,589:" +
"20,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,58" +
"9:13,211,589:18,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:" +
"2,-1,788:8,589:15,462,589:16,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,7" +
"88,589:6,788:2,-1,788:8,589:6,463,589:25,-1:2,788,-1,788:2,-1,228,788,589,1" +
"5,228,-1:2,788,589:6,788:2,-1,788:8,589:13,212,589:18,-1:2,788,-1,788:2,-1," +
"228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:16,585,589:15,-1:2,788" +
",-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,465,589:3,788:2,-1,788:8,589" +
":32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,5" +
"89:4,466,589:27,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:" +
"2,-1,788:8,589:17,468,589:14,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,7" +
"88,589:6,788:2,-1,788:8,589:19,469,589:12,-1:2,788,-1,788:2,-1,228,788,589," +
"15,228,-1:2,788,589:6,788:2,-1,788:8,589:7,470,589:24,-1:2,788,-1,788:2,-1," +
"228,788,589,15,228,-1:2,788,589:4,471,589,788:2,-1,788:8,589:32,-1:2,788,-1" +
",788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:13,473,589:1" +
"8,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589" +
",474,589:30,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1" +
",788:8,589:13,213,589:18,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,5" +
"89:6,788:2,-1,788:8,475,589:31,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2" +
",788,589:2,476,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589" +
",15,228,-1:2,788,589:6,788:2,-1,788:8,589:8,214,589:23,-1:2,788,-1,788:2,-1" +
",228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:16,215,589:15,-1:2,78" +
"8,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:3,477,58" +
"9:28,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8," +
"589:11,478,589:20,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589,479," +
"589:4,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,78" +
"8,589:6,788:2,-1,788:8,589:24,481,589:7,-1:2,788,-1,788:2,-1,228,788,589,15" +
",228,-1:2,788,589:6,788:2,-1,788:8,589:13,216,589:18,-1:2,788,-1,788:2,-1,2" +
"28,788,589,15,228,-1:2,788,589:2,482,589:3,788:2,-1,788:8,589:32,-1:2,788,-" +
"1,788:2,-1,228,788,589,15,228,-1:2,788,589:4,483,589,788:2,-1,788:8,589:32," +
"-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:7" +
",484,589:24,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1" +
",788:8,589,485,589:30,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:" +
"6,788:2,-1,788:8,589:19,486,589:12,-1:2,788,-1,788:2,-1,228,788,589,15,228," +
"-1:2,788,589:6,788:2,-1,788:8,589:9,487,589:22,-1:2,788,-1,788:2,-1,228,788" +
",589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:16,217,589:15,-1:2,788,-1,788" +
":2,-1,228,788,589,15,228,-1:2,788,587,589:5,788:2,-1,788:8,589:32,-1:2,788," +
"-1,788:2,-1,228,788,589,15,228,-1:2,788,589,488,589:4,788:2,-1,788:8,589:32" +
",-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,489,589:3,788:2,-1," +
"788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-" +
"1,788:8,589:11,490,589:20,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788," +
"589:6,788:2,-1,788:8,589:7,492,589:24,-1:2,788,-1,788:2,-1,228,788,589,15,2" +
"28,-1:2,788,589:6,788:2,-1,788:8,589:13,493,589:18,-1:2,788,-1,788:2,-1,228" +
",788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:6,494,589:25,-1:2,788,-1," +
"788:2,-1,228,788,589,15,228,-1:2,788,589,588,589:4,788:2,-1,788:8,589:32,-1" +
":2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,495,589:5,788:2,-1,788:8,589" +
":32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,5" +
"89:11,496,589:20,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788" +
":2,-1,788:8,589:7,497,589:24,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,7" +
"88,589:2,499,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,1" +
"5,228,-1:2,788,589:4,500,589,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228" +
",788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:8,218,589:23,-1:2,788,-1," +
"788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:25,501,589:6," +
"-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589,502,589:4,788:2,-1,788" +
":8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,7" +
"88:8,589:16,219,589:15,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589" +
":6,788:2,-1,788:8,503,589:31,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,7" +
"88,589:6,788:2,-1,788:8,589:11,504,589:20,-1:2,788,-1,788:2,-1,228,788,589," +
"15,228,-1:2,788,589:6,788:2,-1,788:8,589:24,505,589:7,-1:2,788,-1,788:2,-1," +
"228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:25,506,589:6,-1:2,788," +
"-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:19,507,589" +
":12,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,5" +
"08,589:31,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,509,589:3," +
"788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:" +
"6,788:2,-1,788:8,589:24,510,589:7,-1:2,788,-1,788:2,-1,228,788,589,15,228,-" +
"1:2,788,589:6,788:2,-1,788:8,589:13,511,589:18,-1:2,788,-1,788:2,-1,228,788" +
",589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:19,512,589:12,-1:2,788,-1,788" +
":2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,513,589:20,-1" +
":2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,514,589:3,788:2,-1,788" +
":8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:4,515,589,78" +
"8:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6," +
"788:2,-1,788:8,589:13,516,589:18,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1" +
":2,788,589:6,788:2,-1,788:8,589:16,220,589:15,-1:2,788,-1,788:2,-1,228,788," +
"589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,517,589:20,-1:2,788,-1,788:" +
"2,-1,228,788,589,15,228,-1:2,788,589:4,518,589,788:2,-1,788:8,589:32,-1:2,7" +
"88,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:16,221," +
"589:15,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788:4,222,788:4,-1,788:" +
"40,-1:2,788,-1,788:2,-1,788:3,-1,788,-1:2,788,589:2,229,589:3,788:2,-1,788:" +
"8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,78" +
"8:8,589:9,266,589:22,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589,2" +
"72,589:4,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2" +
",788,589:6,788:2,-1,788:8,589:11,628,589:20,-1:2,788,-1,788:2,-1,228,788,58" +
"9,15,228,-1:2,788,589:6,788:2,-1,788:8,589:5,677,589:26,-1:2,788,-1,788:2,-" +
"1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:4,267,589:27,-1:2,78" +
"8,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:13,631,5" +
"89:18,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8" +
",589:3,270,589:28,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:4,54" +
"1,589,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,78" +
"8,589:2,601,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15" +
",228,-1:2,788,589:6,788:2,-1,788:8,589:8,603,589:23,-1:2,788,-1,788:2,-1,22" +
"8,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,663,589:20,-1:2,788,-" +
"1,788:2,-1,228,788,589,15,228,-1:2,788,752,589:5,788:2,-1,788:8,589:32,-1:2" +
",788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:5,637" +
",589:26,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788" +
":8,589:7,302,589:24,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6," +
"788:2,-1,788:8,589:19,681,589:12,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1" +
":2,788,589:6,788:2,-1,788:8,589:4,609,589:27,-1:2,788,-1,788:2,-1,228,788,5" +
"89,15,228,-1:2,788,589,550,589:4,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1" +
",228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:13,548,589:18,-1:2,78" +
"8,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:3,733,58" +
"9:28,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:4,639,589,788:2,-" +
"1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2" +
",-1,788:8,589:9,612,589:22,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788" +
",589:2,665,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15," +
"228,-1:2,788,589:6,788:2,-1,788:8,589:8,313,589:23,-1:2,788,-1,788:2,-1,228" +
",788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:7,642,589:24,-1:2,788,-1," +
"788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,736,589:20" +
",-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:" +
"24,334,589:7,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589,640,589:4" +
",788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589" +
":6,788:2,-1,788:8,589:4,758,589:27,-1:2,788,-1,788:2,-1,228,788,589,15,228," +
"-1:2,788,589:6,788:2,-1,788:8,589:13,324,589:18,-1:2,788,-1,788:2,-1,228,78" +
"8,589,15,228,-1:2,788,589:4,330,589,788:2,-1,788:8,589:32,-1:2,788,-1,788:2" +
",-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:3,737,589:28,-1:2," +
"788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:9,336," +
"589:22,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:" +
"8,589:11,341,589:20,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589,34" +
"0,589:4,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2," +
"788,589:2,346,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589," +
"15,228,-1:2,788,589:6,788:2,-1,788:8,589:4,357,589:27,-1:2,788,-1,788:2,-1," +
"228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:7,350,589:24,-1:2,788," +
"-1,788:2,-1,228,788,589,15,228,-1:2,788,589:4,353,589,788:2,-1,788:8,589:32" +
",-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:" +
"11,562,589:20,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2," +
"-1,788:8,589:9,378,589:22,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788," +
"589:4,762,589,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228" +
",-1:2,788,589:2,382,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,78" +
"8,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:4,381,589:27,-1:2,788,-1,788" +
":2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,622,589:20,-1" +
":2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:9,3" +
"93,589:22,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:4,389,589,78" +
"8:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6," +
"788:2,-1,788:8,589:3,406,589:28,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:" +
"2,788,589:6,788:2,-1,788:8,589:7,401,589:24,-1:2,788,-1,788:2,-1,228,788,58" +
"9,15,228,-1:2,788,589:2,403,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-" +
"1,228,788,589,15,228,-1:2,788,589:4,408,589,788:2,-1,788:8,589:32,-1:2,788," +
"-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,415,589:31,-1:" +
"2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:4,42" +
"4,589:27,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:4,431,589,788" +
":2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,7" +
"88:2,-1,788:8,589:7,430,589:24,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2" +
",788,589:6,788:2,-1,788:8,589:8,577,589:23,-1:2,788,-1,788:2,-1,228,788,589" +
",15,228,-1:2,788,589:2,434,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1" +
",228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:3,443,589:28,-1:2,788" +
",-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:19,442,58" +
"9:12,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8," +
"589:4,453,589:27,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,457" +
",589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,7" +
"88,589:4,458,589,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15," +
"228,-1:2,788,589:6,788:2,-1,788:8,589:9,461,589:22,-1:2,788,-1,788:2,-1,228" +
",788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,464,589:20,-1:2,788,-1" +
",788:2,-1,228,788,589,15,228,-1:2,788,589:2,467,589:3,788:2,-1,788:8,589:32" +
",-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:" +
"4,472,589:27,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-" +
"1,788:8,589:11,480,589:20,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788," +
"589:2,491,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,2" +
"28,-1:2,788,589:6,788:2,-1,788:8,589:11,498,589:20,-1:2,788,-1,788:2,-1,228" +
",788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:9,598,589:22,-1:2,788,-1," +
"788:2,-1,228,788,589,15,228,-1:2,788,589,656,589:4,788:2,-1,788:8,589:32,-1" +
":2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11," +
"542,589:20,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1," +
"788:8,589:4,273,589:27,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589" +
":6,788:2,-1,788:8,589:3,277,589:28,-1:2,788,-1,788:2,-1,228,788,589,15,228," +
"-1:2,788,589:4,538,589,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,5" +
"89,15,228,-1:2,788,589:2,287,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2," +
"-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:8,632,589:23,-1:2,7" +
"88,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,293," +
"589:20,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:" +
"8,589:5,309,589:26,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,7" +
"88:2,-1,788:8,589:4,306,589:27,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2" +
",788,589,307,589:4,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,1" +
"5,228,-1:2,788,589:6,788:2,-1,788:8,589:13,311,589:18,-1:2,788,-1,788:2,-1," +
"228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:3,610,589:28,-1:2,788," +
"-1,788:2,-1,228,788,589,15,228,-1:2,788,589:4,299,589,788:2,-1,788:8,589:32" +
",-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:" +
"9,546,589:22,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,300,589" +
":3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,5" +
"89:6,788:2,-1,788:8,589:8,316,589:23,-1:2,788,-1,788:2,-1,228,788,589,15,22" +
"8,-1:2,788,589:6,788:2,-1,788:8,589:11,558,589:20,-1:2,788,-1,788:2,-1,228," +
"788,589,15,228,-1:2,788,589,666,589:4,788:2,-1,788:8,589:32,-1:2,788,-1,788" +
":2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:4,643,589:27,-1:" +
"2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:13,3" +
"27,589:18,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:4,735,589,78" +
"8:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6," +
"788:2,-1,788:8,589:3,337,589:28,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:" +
"2,788,589:6,788:2,-1,788:8,589:11,348,589:20,-1:2,788,-1,788:2,-1,228,788,5" +
"89,15,228,-1:2,788,589:2,347,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2," +
"-1,228,788,589,15,228,-1:2,788,589:4,356,589,788:2,-1,788:8,589:32,-1:2,788" +
",-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,373,58" +
"9:20,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:4,371,589,788:2,-" +
"1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2" +
",-1,788:8,589:4,386,589:27,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788" +
",589:4,392,589,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,22" +
"8,-1:2,788,589:2,409,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,7" +
"88,589,15,228,-1:2,788,589:4,411,589,788:2,-1,788:8,589:32,-1:2,788,-1,788:" +
"2,-1,228,788,589,15,228,-1:2,788,589:2,441,589:3,788:2,-1,788:8,589:32,-1:2" +
",788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:9,232" +
",589:17,233,589:4,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589,283," +
"589:4,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,78" +
"8,589:6,788:2,-1,788:8,589:11,604,589:20,-1:2,788,-1,788:2,-1,228,788,589,1" +
"5,228,-1:2,788,589:6,788:2,-1,788:8,589:4,751,589:27,-1:2,788,-1,788:2,-1,2" +
"28,788,589,15,228,-1:2,788,589:4,602,589,788:2,-1,788:8,589:32,-1:2,788,-1," +
"788:2,-1,228,788,589,15,228,-1:2,788,589:2,634,589:3,788:2,-1,788:8,589:32," +
"-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:8" +
",294,589:23,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1" +
",788:8,589:11,664,589:20,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,5" +
"89:6,788:2,-1,788:8,589:5,754,589:26,-1:2,788,-1,788:2,-1,228,788,589,15,22" +
"8,-1:2,788,589,308,589:4,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788" +
",589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:13,608,589:18,-1:2,788,-1,788" +
":2,-1,228,788,589,15,228,-1:2,788,589:4,549,589,788:2,-1,788:8,589:32,-1:2," +
"788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:9,764," +
"589:22,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,310,589:3,788" +
":2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,7" +
"88:2,-1,788:8,589:8,326,589:23,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2" +
",788,589,322,589:4,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,1" +
"5,228,-1:2,788,589:6,788:2,-1,788:8,589:4,338,589:27,-1:2,788,-1,788:2,-1,2" +
"28,788,589,15,228,-1:2,788,589:4,684,589,788:2,-1,788:8,589:32,-1:2,788,-1," +
"788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:3,354,589:28," +
"-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:1" +
"1,779,589:20,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,351,589" +
":3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,5" +
"89:4,358,589,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228," +
"-1:2,788,589:6,788:2,-1,788:8,589:11,566,589:20,-1:2,788,-1,788:2,-1,228,78" +
"8,589,15,228,-1:2,788,589:4,372,589,788:2,-1,788:8,589:32,-1:2,788,-1,788:2" +
",-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:4,567,589:27,-1:2," +
"788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:4,394,589,788:2,-1,788:8,58" +
"9:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,410,589:3,788:2" +
",-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:4,417" +
",589,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788" +
",589:6,788:2,-1,788:8,589:3,236,589:3,237,589:24,-1:2,788,-1,788:2,-1,228,7" +
"88,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,661,589:20,-1:2,788,-1,7" +
"88:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:4,539,589:27,-" +
"1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:4,288,589,788:2,-1,788:" +
"8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,297,589:3,7" +
"88:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6" +
",788:2,-1,788:8,589:8,662,589:23,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1" +
":2,788,589:6,788:2,-1,788:8,589:11,304,589:20,-1:2,788,-1,788:2,-1,228,788," +
"589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:5,641,589:26,-1:2,788,-1,788:2" +
",-1,228,788,589,15,228,-1:2,788,589,551,589:4,788:2,-1,788:8,589:32,-1:2,78" +
"8,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:4,611,589,788:2,-1,788:8,589:" +
"32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,58" +
"9:9,319,589:22,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,613,5" +
"89:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788" +
",589:6,788:2,-1,788:8,589:8,328,589:23,-1:2,788,-1,788:2,-1,228,788,589,15," +
"228,-1:2,788,589,323,589:4,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,7" +
"88,589,15,228,-1:2,788,589:4,556,589,788:2,-1,788:8,589:32,-1:2,788,-1,788:" +
"2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,618,589:20,-1:" +
"2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,359,589:3,788:2,-1,788:" +
"8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:4,560,589,788" +
":2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,7" +
"88:2,-1,788:8,589:11,620,589:20,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:" +
"2,788,589:4,374,589,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589," +
"15,228,-1:2,788,589:4,396,589,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,22" +
"8,788,589,15,228,-1:2,788,589:2,240,589,521,589,788:2,-1,788:8,589:3,525,58" +
"9:4,241,589:23,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2" +
",-1,788:8,589:11,773,589:20,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,78" +
"8,589:6,788:2,-1,788:8,589:4,658,589:27,-1:2,788,-1,788:2,-1,228,788,589,15" +
",228,-1:2,788,589:4,290,589,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228," +
"788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,305,589:20,-1:2,788,-1," +
"788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:5,703,589:26," +
"-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589,314,589:4,788:2,-1,788" +
":8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:4,317,589,78" +
"8:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2," +
"320,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:" +
"2,788,589,325,589:4,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589," +
"15,228,-1:2,788,589:4,339,589,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,22" +
"8,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,647,589:20,-1:2,788,-" +
"1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,362,589:3,788:2,-1,788:8,589:3" +
"2,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:4,364,589,788:2,-1,7" +
"88:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1" +
",788:8,589:11,649,589:20,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,5" +
"89:4,379,589,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228," +
"-1:2,788,589:4,399,589,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,5" +
"89,15,228,-1:2,788,748,589:5,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228" +
",788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,537,589:20,-1:2,788,-1" +
",788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:5,332,589:26" +
",-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,321,589:3,788:2,-1," +
"788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589,614,589:4" +
",788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589" +
":4,342,589,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1" +
":2,788,589:6,788:2,-1,788:8,589:11,671,589:20,-1:2,788,-1,788:2,-1,228,788," +
"589,15,228,-1:2,788,589:4,365,589,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-" +
"1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,377,589:20,-1:2,7" +
"88,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:4,380,589,788:2,-1,788:8,589" +
":32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:4,402,589,788:2,-1" +
",788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2," +
"-1,788:8,589:7,243,244,589:23,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2," +
"788,589:6,788:2,-1,788:8,589:5,712,589:26,-1:2,788,-1,788:2,-1,228,788,589," +
"15,228,-1:2,788,589:4,343,589,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,22" +
"8,788,589,15,228,-1:2,788,589:4,366,589,788:2,-1,788:8,589:32,-1:2,788,-1,7" +
"88:2,-1,228,788,589,15,228,-1:2,788,589:4,384,589,788:2,-1,788:8,589:32,-1:" +
"2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,245,589:3,788:2,-1,788:" +
"8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,78" +
"8:8,589:5,753,589:26,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:4" +
",367,589,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2" +
",788,589:2,527,589:3,788:2,-1,788:8,589:30,246,589,-1:2,788,-1,788:2,-1,228" +
",788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:5,686,589:26,-1:2,788,-1," +
"788:2,-1,228,788,589,15,228,-1:2,788,589:2,590,589,522,589,788:2,-1,788:8,5" +
"89:3,593,589:3,247,589:24,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788," +
"589:6,788:2,-1,788:8,589:5,349,589:26,-1:2,788,-1,788:2,-1,228,788,589,15,2" +
"28,-1:2,788,589:6,788:2,-1,788:8,589:8,594,589:23,-1:2,788,-1,788:2,-1,228," +
"788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:5,561,589:26,-1:2,788,-1,7" +
"88:2,-1,228,788,589,15,228,-1:2,788,589:2,248,589:3,788:2,-1,788:8,589:32,-" +
"1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:5," +
"383,589:26,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,249,589:3" +
",788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589" +
":6,788:2,-1,788:8,589:5,390,589:26,-1:2,788,-1,788:2,-1,228,788,589,15,228," +
"-1:2,788,589:6,788:2,-1,788:8,589:8,250,589:2,627,589,654,589:18,-1:2,788,-" +
"1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:5,391,589:2" +
"6,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:4,591,589,788:2,-1,7" +
"88:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1" +
",788:8,589:5,405,589:26,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,58" +
"9:6,788:2,-1,788:8,589:16,251,589:15,-1:2,788,-1,788:2,-1,228,788,589,15,22" +
"8,-1:2,788,589:6,788:2,-1,788:8,589:9,252,589:22,-1:2,788,-1,788:2,-1,228,7" +
"88,589,15,228,-1:2,788,589:2,592,589:3,788:2,-1,788:8,589:4,626,589:3,253,5" +
"89:23,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,254,589:3,788:" +
"2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:4,25" +
"5,589,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,78" +
"8,589:2,256,589:3,788:2,-1,788:8,589:7,257,589:24,-1:2,788,-1,788:2,-1,228," +
"788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:8,625,589:23,-1:2,788,-1,7" +
"88:2,-1,228,788,589,15,228,-1:2,788:3,519,788:5,-1,788:40,-1:2,788,-1,788:2" +
",-1,788:3,-1,788,-1:2,788,589:6,788:2,-1,788:8,589:7,678,589:24,-1:2,788,-1" +
",788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,683,589:2" +
"0,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589" +
":4,554,589:27,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589,716,589:" +
"4,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,58" +
"9:6,788:2,-1,788:8,589:11,697,589:20,-1:2,788,-1,788:2,-1,228,788,589,15,22" +
"8,-1:2,788,589:6,788:2,-1,788:8,589:14,685,589:17,-1:2,788,-1,788:2,-1,228," +
"788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:4,617,589:27,-1:2,788,-1,7" +
"88:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:13,646,589:18," +
"-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:1" +
"1,699,589:20,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-" +
"1,788:8,589:9,648,589:22,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,5" +
"89:6,788:2,-1,788:8,589:13,564,589:18,-1:2,788,-1,788:2,-1,228,788,589,15,2" +
"28,-1:2,788,589:6,788:2,-1,788:8,589:11,689,589:20,-1:2,788,-1,788:2,-1,228" +
",788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:16,569,589:15,-1:2,788,-1" +
",788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:19,650,589:1" +
"2,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589" +
":24,578,589:7,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2," +
"-1,788:8,589:19,584,589:12,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788" +
",589:6,788:2,-1,788:8,589:13,586,589:18,-1:2,788,-1,788:2,-1,228,788,589,15" +
",228,-1:2,788,589:6,788:2,-1,788:8,589:11,676,589:20,-1:2,788,-1,788:2,-1,2" +
"28,788,589,15,228,-1:2,788,589:4,636,589,788:2,-1,788:8,589:32,-1:2,788,-1," +
"788:2,-1,228,788,589,15,228,-1:2,788,589:2,633,589:3,788:2,-1,788:8,589:32," +
"-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:1" +
"1,693,589:20,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,694,589" +
":3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,5" +
"89:2,741,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,22" +
"8,-1:2,788,589:6,788:2,-1,788:8,589:4,667,589:27,-1:2,788,-1,788:2,-1,228,7" +
"88,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:7,692,589:24,-1:2,788,-1,78" +
"8:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,695,589:20,-" +
"1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589,718,589:4,788:2,-1,788:" +
"8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,78" +
"8:8,589:11,704,589:20,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:" +
"6,788:2,-1,788:8,589:4,687,589:27,-1:2,788,-1,788:2,-1,228,788,589,15,228,-" +
"1:2,788,589:6,788:2,-1,788:8,589:13,670,589:18,-1:2,788,-1,788:2,-1,228,788" +
",589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,705,589:20,-1:2,788,-1,788" +
":2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,700,589:20,-1" +
":2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,660,589:3,788:2,-1,788" +
":8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,7" +
"88:8,589:4,696,589:27,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:" +
"6,788:2,-1,788:8,589:7,710,589:24,-1:2,788,-1,788:2,-1,228,788,589,15,228,-" +
"1:2,788,589,722,589:4,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,58" +
"9,15,228,-1:2,788,589:6,788:2,-1,788:8,589:11,708,589:20,-1:2,788,-1,788:2," +
"-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:13,698,589:18,-1:2," +
"788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,679,589:3,788:2,-1,788:8," +
"589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:" +
"8,589:7,714,589:24,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,7" +
"88:2,-1,788:8,589:7,720,589:24,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2" +
",788:2,730,788:6,-1,788:40,-1:2,788,-1,788:2,-1,788:3,-1,788,-1:2,788,765,5" +
"89:5,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788" +
",589:6,788:2,-1,788:8,589:4,756,589:27,-1:2,788,-1,788:2,-1,228,788,589,15," +
"228,-1:2,788,771,589:5,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,5" +
"89,15,228,-1:2,788,589:6,788:2,-1,788:8,589:9,760,589:22,-1:2,788,-1,788:2," +
"-1,228,788,589,15,228,-1:2,788,589:6,788:2,-1,788:8,589:7,740,589:24,-1:2,7" +
"88,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:2,757,589:3,788:2,-1,788:8,5" +
"89:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:4,743,589,788:2," +
"-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589:6,788:" +
"2,-1,788:8,589:15,746,589:16,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,7" +
"88,589:2,747,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,1" +
"5,228,-1:2,788,589:6,788:2,-1,788:8,589:8,776,589:23,-1:2,788,-1,788:2,-1,2" +
"28,788,589,15,228,-1:2,788:9,-1,788:40,-1:2,788,-1,788:2,-1,785,788:2,-1,78" +
"8,-1:2,788,589:2,766,589:3,788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,7" +
"88,589,15,228,-1:2,788:3,786,788:5,-1,788:40,-1:2,788,-1,788:2,-1,785,788:2" +
",-1,788,-1:2,788:9,-1,788:40,-1:2,788,-1,788:2,-1,787,792,788,-1,788,-1:2,7" +
"88:9,-1,788:40,-1:2,788,-1,788:2,-1,787,788:2,-1,788,-1:2,788,589:4,777,589" +
",788:2,-1,788:8,589:32,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1:2,788,589" +
":6,788:2,-1,788:8,589,778,589:30,-1:2,788,-1,788:2,-1,228,788,589,15,228,-1" +
":2,788,589:6,788:2,-1,788:8,589:19,781,589:12,-1:2,788,-1,788:2,-1,228,788," +
"589,15,228,-1:2,788:9,-1,783,788:39,-1:2,788,-1,788:2,-1,793,788:2,-1,788,-" +
"1");

	public java_cup.runtime.Symbol next_token ()
		throws java.io.IOException {
		int yy_lookahead;
		int yy_anchor = YY_NO_ANCHOR;
		int yy_state = yy_state_dtrans[yy_lexical_state];
		int yy_next_state = YY_NO_STATE;
		int yy_last_accept_state = YY_NO_STATE;
		boolean yy_initial = true;
		int yy_this_accept;

		yy_mark_start();
		yy_this_accept = yy_acpt[yy_state];
		if (YY_NOT_ACCEPT != yy_this_accept) {
			yy_last_accept_state = yy_state;
			yy_mark_end();
		}
		while (true) {
			if (yy_initial && yy_at_bol) yy_lookahead = YY_BOL;
			else yy_lookahead = yy_advance();
			yy_next_state = YY_F;
			yy_next_state = yy_nxt[yy_rmap[yy_state]][yy_cmap[yy_lookahead]];
			if (YY_EOF == yy_lookahead && true == yy_initial) {
				return null;
			}
			if (YY_F != yy_next_state) {
				yy_state = yy_next_state;
				yy_initial = false;
				yy_this_accept = yy_acpt[yy_state];
				if (YY_NOT_ACCEPT != yy_this_accept) {
					yy_last_accept_state = yy_state;
					yy_mark_end();
				}
			}
			else {
				if (YY_NO_STATE == yy_last_accept_state) {
					throw (new Error("Lexical Error: Unmatched Input."));
				}
				else {
					yy_anchor = yy_acpt[yy_last_accept_state];
					if (0 != (YY_END & yy_anchor)) {
						yy_move_end();
					}
					yy_to_mark();
					switch (yy_last_accept_state) {
					case 1:
						
					case -2:
						break;
					case 2:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -3:
						break;
					case 3:
						{ return new Symbol(sym._SYMB_1); }
					case -4:
						break;
					case 4:
						{ return new Symbol(sym._SYMB_2); }
					case -5:
						break;
					case 5:
						{ return new Symbol(sym._SYMB_3); }
					case -6:
						break;
					case 6:
						{ return new Symbol(sym._SYMB_4); }
					case -7:
						break;
					case 7:
						{ return new Symbol(sym._SYMB_5); }
					case -8:
						break;
					case 8:
						{ return new Symbol(sym._SYMB_6); }
					case -9:
						break;
					case 9:
						{ return new Symbol(sym._SYMB_7); }
					case -10:
						break;
					case 10:
						{ return new Symbol(sym._SYMB_8); }
					case -11:
						break;
					case 11:
						{ return new Symbol(sym._SYMB_9); }
					case -12:
						break;
					case 12:
						{ return new Symbol(sym._SYMB_10); }
					case -13:
						break;
					case 13:
						{ return new Symbol(sym._SYMB_11); }
					case -14:
						break;
					case 14:
						{ /* ignore white space. */ }
					case -15:
						break;
					case 15:
						{ return new Symbol(sym._IDENT_, yytext().intern()); }
					case -16:
						break;
					case 16:
						{ return new Symbol(sym._SYMB_12); }
					case -17:
						break;
					case 17:
						{ yybegin(COMMENT); }
					case -18:
						break;
					case 18:
						{ return new Symbol(sym._SYMB_13); }
					case -19:
						break;
					case 19:
						{ return new Symbol(sym._SYMB_45); }
					case -20:
						break;
					case 20:
						{ return new Symbol(sym._SYMB_26); }
					case -21:
						break;
					case 21:
						{ return new Symbol(sym._SYMB_39); }
					case -22:
						break;
					case 22:
						{ return new Symbol(sym._SYMB_63); }
					case -23:
						break;
					case 23:
						{ /* BNFC single-line comment */ }
					case -24:
						break;
					case 24:
						{ return new Symbol(sym._SYMB_28); }
					case -25:
						break;
					case 25:
						{ return new Symbol(sym._SYMB_80); }
					case -26:
						break;
					case 26:
						{ return new Symbol(sym._SYMB_27); }
					case -27:
						break;
					case 27:
						{ return new Symbol(sym._SYMB_75); }
					case -28:
						break;
					case 28:
						{ return new Symbol(sym._SYMB_102); }
					case -29:
						break;
					case 29:
						{ return new Symbol(sym._SYMB_60); }
					case -30:
						break;
					case 30:
						{ return new Symbol(sym._SYMB_103); }
					case -31:
						break;
					case 31:
						{ return new Symbol(sym._SYMB_82); }
					case -32:
						break;
					case 32:
						{ return new Symbol(sym._SYMB_97); }
					case -33:
						break;
					case 33:
						{ return new Symbol(sym._SYMB_100); }
					case -34:
						break;
					case 34:
						{ return new Symbol(sym._SYMB_49); }
					case -35:
						break;
					case 35:
						{ return new Symbol(sym._SYMB_50); }
					case -36:
						break;
					case 36:
						{ return new Symbol(sym._SYMB_51); }
					case -37:
						break;
					case 37:
						{ return new Symbol(sym._SYMB_81); }
					case -38:
						break;
					case 38:
						{ return new Symbol(sym._SYMB_64); }
					case -39:
						break;
					case 39:
						{ return new Symbol(sym._SYMB_43); }
					case -40:
						break;
					case 40:
						{ return new Symbol(sym._SYMB_56); }
					case -41:
						break;
					case 41:
						{ return new Symbol(sym._SYMB_46); }
					case -42:
						break;
					case 42:
						{ return new Symbol(sym._SYMB_58); }
					case -43:
						break;
					case 43:
						{ return new Symbol(sym._SYMB_0); }
					case -44:
						break;
					case 44:
						{ return new Symbol(sym._SYMB_85); }
					case -45:
						break;
					case 45:
						{ return new Symbol(sym._SYMB_88); }
					case -46:
						break;
					case 46:
						{ return new Symbol(sym._SYMB_87); }
					case -47:
						break;
					case 47:
						{ return new Symbol(sym._SYMB_86); }
					case -48:
						break;
					case 48:
						{ return new Symbol(sym._SYMB_71); }
					case -49:
						break;
					case 49:
						{ return new Symbol(sym._SYMB_44); }
					case -50:
						break;
					case 50:
						{ return new Symbol(sym._SYMB_76); }
					case -51:
						break;
					case 51:
						{ return new Symbol(sym._SYMB_47); }
					case -52:
						break;
					case 52:
						{ return new Symbol(sym._SYMB_38); }
					case -53:
						break;
					case 53:
						{ return new Symbol(sym._SYMB_25); }
					case -54:
						break;
					case 54:
						{ return new Symbol(sym._SYMB_90); }
					case -55:
						break;
					case 55:
						{ return new Symbol(sym._SYMB_89); }
					case -56:
						break;
					case 56:
						{ return new Symbol(sym._SYMB_79); }
					case -57:
						break;
					case 57:
						{ return new Symbol(sym._SYMB_96); }
					case -58:
						break;
					case 58:
						{ return new Symbol(sym._SYMB_77); }
					case -59:
						break;
					case 59:
						{ return new Symbol(sym._SYMB_74); }
					case -60:
						break;
					case 60:
						{ return new Symbol(sym._SYMB_65); }
					case -61:
						break;
					case 61:
						{ return new Symbol(sym._SYMB_61); }
					case -62:
						break;
					case 62:
						{ return new Symbol(sym._SYMB_68); }
					case -63:
						break;
					case 63:
						{ return new Symbol(sym._SYMB_14); }
					case -64:
						break;
					case 64:
						{ return new Symbol(sym._SYMB_41); }
					case -65:
						break;
					case 65:
						{ return new Symbol(sym._SYMB_95); }
					case -66:
						break;
					case 66:
						{ return new Symbol(sym._SYMB_57); }
					case -67:
						break;
					case 67:
						{ return new Symbol(sym._SYMB_66); }
					case -68:
						break;
					case 68:
						{ return new Symbol(sym._SYMB_37); }
					case -69:
						break;
					case 69:
						{ return new Symbol(sym._SYMB_20); }
					case -70:
						break;
					case 70:
						{ return new Symbol(sym._SYMB_78); }
					case -71:
						break;
					case 71:
						{ return new Symbol(sym._SYMB_70); }
					case -72:
						break;
					case 72:
						{ return new Symbol(sym._SYMB_69); }
					case -73:
						break;
					case 73:
						{ return new Symbol(sym._SYMB_67); }
					case -74:
						break;
					case 74:
						{ return new Symbol(sym._SYMB_40); }
					case -75:
						break;
					case 75:
						{ return new Symbol(sym._SYMB_42); }
					case -76:
						break;
					case 76:
						{ return new Symbol(sym._SYMB_73); }
					case -77:
						break;
					case 77:
						{ return new Symbol(sym._SYMB_59); }
					case -78:
						break;
					case 78:
						{ return new Symbol(sym._SYMB_84); }
					case -79:
						break;
					case 79:
						{ return new Symbol(sym._SYMB_91); }
					case -80:
						break;
					case 80:
						{ return new Symbol(sym._SYMB_62); }
					case -81:
						break;
					case 81:
						{ return new Symbol(sym._SYMB_99); }
					case -82:
						break;
					case 82:
						{ return new Symbol(sym._SYMB_98); }
					case -83:
						break;
					case 83:
						{ return new Symbol(sym._SYMB_101); }
					case -84:
						break;
					case 84:
						{ return new Symbol(sym._SYMB_54); }
					case -85:
						break;
					case 85:
						{ return new Symbol(sym._SYMB_53); }
					case -86:
						break;
					case 86:
						{ return new Symbol(sym._SYMB_52); }
					case -87:
						break;
					case 87:
						{ return new Symbol(sym._SYMB_83); }
					case -88:
						break;
					case 88:
						{ return new Symbol(sym._SYMB_93); }
					case -89:
						break;
					case 89:
						{ return new Symbol(sym._SYMB_72); }
					case -90:
						break;
					case 90:
						{ return new Symbol(sym._SYMB_94); }
					case -91:
						break;
					case 91:
						{ return new Symbol(sym._SYMB_19); }
					case -92:
						break;
					case 92:
						{ return new Symbol(sym._SYMB_92); }
					case -93:
						break;
					case 93:
						{ return new Symbol(sym._SYMB_17); }
					case -94:
						break;
					case 94:
						{ return new Symbol(sym._SYMB_55); }
					case -95:
						break;
					case 95:
						{ return new Symbol(sym._SYMB_35); }
					case -96:
						break;
					case 96:
						{ return new Symbol(sym._SYMB_48); }
					case -97:
						break;
					case 97:
						{ return new Symbol(sym._SYMB_21); }
					case -98:
						break;
					case 98:
						{ return new Symbol(sym._SYMB_16); }
					case -99:
						break;
					case 99:
						{ return new Symbol(sym._SYMB_36); }
					case -100:
						break;
					case 100:
						{ return new Symbol(sym._SYMB_29); }
					case -101:
						break;
					case 101:
						{ return new Symbol(sym._SYMB_18); }
					case -102:
						break;
					case 102:
						{ return new Symbol(sym._SYMB_31); }
					case -103:
						break;
					case 103:
						{ return new Symbol(sym._SYMB_15); }
					case -104:
						break;
					case 104:
						{ return new Symbol(sym._SYMB_33); }
					case -105:
						break;
					case 105:
						{ return new Symbol(sym._SYMB_30); }
					case -106:
						break;
					case 106:
						{ return new Symbol(sym._SYMB_22); }
					case -107:
						break;
					case 107:
						{ return new Symbol(sym._SYMB_34); }
					case -108:
						break;
					case 108:
						{ return new Symbol(sym._SYMB_32); }
					case -109:
						break;
					case 109:
						{ return new Symbol(sym._SYMB_23); }
					case -110:
						break;
					case 110:
						{ return new Symbol(sym._SYMB_24); }
					case -111:
						break;
					case 111:
						{ }
					case -112:
						break;
					case 112:
						{ }
					case -113:
						break;
					case 113:
						{ yybegin(YYINITIAL); }
					case -114:
						break;
					case 114:
						{ pstring += yytext(); }
					case -115:
						break;
					case 115:
						{ String foo = pstring; pstring = new String(); yybegin(YYINITIAL); return new Symbol(sym._STRING_, foo.intern()); }
					case -116:
						break;
					case 116:
						{ yybegin(ESCAPED); }
					case -117:
						break;
					case 117:
						{ pstring += yytext(); yybegin(STRING); }
					case -118:
						break;
					case 118:
						{ pstring +=  "\n"; yybegin(STRING); }
					case -119:
						break;
					case 119:
						{ pstring += "\t"; yybegin(STRING); }
					case -120:
						break;
					case 120:
						{ pstring += "\""; yybegin(STRING); }
					case -121:
						break;
					case 121:
						{ pstring += "\\"; yybegin(STRING); }
					case -122:
						break;
					case 123:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -123:
						break;
					case 124:
						{ }
					case -124:
						break;
					case 126:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -125:
						break;
					case 128:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -126:
						break;
					case 130:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -127:
						break;
					case 132:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -128:
						break;
					case 133:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -129:
						break;
					case 134:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -130:
						break;
					case 135:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -131:
						break;
					case 136:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -132:
						break;
					case 137:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -133:
						break;
					case 138:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -134:
						break;
					case 139:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -135:
						break;
					case 140:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -136:
						break;
					case 141:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -137:
						break;
					case 142:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -138:
						break;
					case 143:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -139:
						break;
					case 144:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -140:
						break;
					case 145:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -141:
						break;
					case 146:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -142:
						break;
					case 147:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -143:
						break;
					case 148:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -144:
						break;
					case 149:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -145:
						break;
					case 150:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -146:
						break;
					case 151:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -147:
						break;
					case 152:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -148:
						break;
					case 153:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -149:
						break;
					case 154:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -150:
						break;
					case 155:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -151:
						break;
					case 156:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -152:
						break;
					case 157:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -153:
						break;
					case 158:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -154:
						break;
					case 159:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -155:
						break;
					case 160:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -156:
						break;
					case 161:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -157:
						break;
					case 162:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -158:
						break;
					case 163:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -159:
						break;
					case 164:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -160:
						break;
					case 165:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -161:
						break;
					case 166:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -162:
						break;
					case 167:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -163:
						break;
					case 168:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -164:
						break;
					case 169:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -165:
						break;
					case 170:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -166:
						break;
					case 171:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -167:
						break;
					case 172:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -168:
						break;
					case 173:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -169:
						break;
					case 174:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -170:
						break;
					case 175:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -171:
						break;
					case 176:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -172:
						break;
					case 177:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -173:
						break;
					case 178:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -174:
						break;
					case 179:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -175:
						break;
					case 180:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -176:
						break;
					case 181:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -177:
						break;
					case 182:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -178:
						break;
					case 183:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -179:
						break;
					case 184:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -180:
						break;
					case 185:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -181:
						break;
					case 186:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -182:
						break;
					case 187:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -183:
						break;
					case 188:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -184:
						break;
					case 189:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -185:
						break;
					case 190:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -186:
						break;
					case 191:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -187:
						break;
					case 192:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -188:
						break;
					case 193:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -189:
						break;
					case 194:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -190:
						break;
					case 195:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -191:
						break;
					case 196:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -192:
						break;
					case 197:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -193:
						break;
					case 198:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -194:
						break;
					case 199:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -195:
						break;
					case 200:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -196:
						break;
					case 201:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -197:
						break;
					case 202:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -198:
						break;
					case 203:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -199:
						break;
					case 204:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -200:
						break;
					case 205:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -201:
						break;
					case 206:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -202:
						break;
					case 207:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -203:
						break;
					case 208:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -204:
						break;
					case 209:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -205:
						break;
					case 210:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -206:
						break;
					case 211:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -207:
						break;
					case 212:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -208:
						break;
					case 213:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -209:
						break;
					case 214:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -210:
						break;
					case 215:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -211:
						break;
					case 216:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -212:
						break;
					case 217:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -213:
						break;
					case 218:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -214:
						break;
					case 219:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -215:
						break;
					case 220:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -216:
						break;
					case 221:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -217:
						break;
					case 222:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -218:
						break;
					case 223:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -219:
						break;
					case 224:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -220:
						break;
					case 225:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -221:
						break;
					case 226:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -222:
						break;
					case 227:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -223:
						break;
					case 228:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -224:
						break;
					case 229:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -225:
						break;
					case 230:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -226:
						break;
					case 231:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -227:
						break;
					case 232:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -228:
						break;
					case 233:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -229:
						break;
					case 234:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -230:
						break;
					case 235:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -231:
						break;
					case 236:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -232:
						break;
					case 237:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -233:
						break;
					case 238:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -234:
						break;
					case 239:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -235:
						break;
					case 240:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -236:
						break;
					case 241:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -237:
						break;
					case 242:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -238:
						break;
					case 243:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -239:
						break;
					case 244:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -240:
						break;
					case 245:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -241:
						break;
					case 246:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -242:
						break;
					case 247:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -243:
						break;
					case 248:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -244:
						break;
					case 249:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -245:
						break;
					case 250:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -246:
						break;
					case 251:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -247:
						break;
					case 252:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -248:
						break;
					case 253:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -249:
						break;
					case 254:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -250:
						break;
					case 255:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -251:
						break;
					case 256:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -252:
						break;
					case 257:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -253:
						break;
					case 258:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -254:
						break;
					case 259:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -255:
						break;
					case 260:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -256:
						break;
					case 261:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -257:
						break;
					case 262:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -258:
						break;
					case 263:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -259:
						break;
					case 264:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -260:
						break;
					case 265:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -261:
						break;
					case 266:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -262:
						break;
					case 267:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -263:
						break;
					case 268:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -264:
						break;
					case 269:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -265:
						break;
					case 270:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -266:
						break;
					case 271:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -267:
						break;
					case 272:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -268:
						break;
					case 273:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -269:
						break;
					case 274:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -270:
						break;
					case 275:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -271:
						break;
					case 276:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -272:
						break;
					case 277:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -273:
						break;
					case 278:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -274:
						break;
					case 279:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -275:
						break;
					case 280:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -276:
						break;
					case 281:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -277:
						break;
					case 282:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -278:
						break;
					case 283:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -279:
						break;
					case 284:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -280:
						break;
					case 285:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -281:
						break;
					case 286:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -282:
						break;
					case 287:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -283:
						break;
					case 288:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -284:
						break;
					case 289:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -285:
						break;
					case 290:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -286:
						break;
					case 291:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -287:
						break;
					case 292:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -288:
						break;
					case 293:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -289:
						break;
					case 294:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -290:
						break;
					case 295:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -291:
						break;
					case 296:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -292:
						break;
					case 297:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -293:
						break;
					case 298:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -294:
						break;
					case 299:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -295:
						break;
					case 300:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -296:
						break;
					case 301:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -297:
						break;
					case 302:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -298:
						break;
					case 303:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -299:
						break;
					case 304:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -300:
						break;
					case 305:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -301:
						break;
					case 306:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -302:
						break;
					case 307:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -303:
						break;
					case 308:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -304:
						break;
					case 309:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -305:
						break;
					case 310:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -306:
						break;
					case 311:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -307:
						break;
					case 312:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -308:
						break;
					case 313:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -309:
						break;
					case 314:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -310:
						break;
					case 315:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -311:
						break;
					case 316:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -312:
						break;
					case 317:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -313:
						break;
					case 318:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -314:
						break;
					case 319:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -315:
						break;
					case 320:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -316:
						break;
					case 321:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -317:
						break;
					case 322:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -318:
						break;
					case 323:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -319:
						break;
					case 324:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -320:
						break;
					case 325:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -321:
						break;
					case 326:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -322:
						break;
					case 327:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -323:
						break;
					case 328:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -324:
						break;
					case 329:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -325:
						break;
					case 330:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -326:
						break;
					case 331:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -327:
						break;
					case 332:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -328:
						break;
					case 333:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -329:
						break;
					case 334:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -330:
						break;
					case 335:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -331:
						break;
					case 336:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -332:
						break;
					case 337:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -333:
						break;
					case 338:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -334:
						break;
					case 339:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -335:
						break;
					case 340:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -336:
						break;
					case 341:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -337:
						break;
					case 342:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -338:
						break;
					case 343:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -339:
						break;
					case 344:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -340:
						break;
					case 345:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -341:
						break;
					case 346:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -342:
						break;
					case 347:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -343:
						break;
					case 348:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -344:
						break;
					case 349:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -345:
						break;
					case 350:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -346:
						break;
					case 351:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -347:
						break;
					case 352:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -348:
						break;
					case 353:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -349:
						break;
					case 354:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -350:
						break;
					case 355:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -351:
						break;
					case 356:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -352:
						break;
					case 357:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -353:
						break;
					case 358:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -354:
						break;
					case 359:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -355:
						break;
					case 360:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -356:
						break;
					case 361:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -357:
						break;
					case 362:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -358:
						break;
					case 363:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -359:
						break;
					case 364:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -360:
						break;
					case 365:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -361:
						break;
					case 366:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -362:
						break;
					case 367:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -363:
						break;
					case 368:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -364:
						break;
					case 369:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -365:
						break;
					case 370:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -366:
						break;
					case 371:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -367:
						break;
					case 372:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -368:
						break;
					case 373:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -369:
						break;
					case 374:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -370:
						break;
					case 375:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -371:
						break;
					case 376:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -372:
						break;
					case 377:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -373:
						break;
					case 378:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -374:
						break;
					case 379:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -375:
						break;
					case 380:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -376:
						break;
					case 381:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -377:
						break;
					case 382:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -378:
						break;
					case 383:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -379:
						break;
					case 384:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -380:
						break;
					case 385:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -381:
						break;
					case 386:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -382:
						break;
					case 387:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -383:
						break;
					case 388:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -384:
						break;
					case 389:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -385:
						break;
					case 390:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -386:
						break;
					case 391:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -387:
						break;
					case 392:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -388:
						break;
					case 393:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -389:
						break;
					case 394:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -390:
						break;
					case 395:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -391:
						break;
					case 396:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -392:
						break;
					case 397:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -393:
						break;
					case 398:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -394:
						break;
					case 399:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -395:
						break;
					case 400:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -396:
						break;
					case 401:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -397:
						break;
					case 402:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -398:
						break;
					case 403:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -399:
						break;
					case 404:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -400:
						break;
					case 405:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -401:
						break;
					case 406:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -402:
						break;
					case 407:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -403:
						break;
					case 408:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -404:
						break;
					case 409:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -405:
						break;
					case 410:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -406:
						break;
					case 411:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -407:
						break;
					case 412:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -408:
						break;
					case 413:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -409:
						break;
					case 414:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -410:
						break;
					case 415:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -411:
						break;
					case 416:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -412:
						break;
					case 417:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -413:
						break;
					case 418:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -414:
						break;
					case 419:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -415:
						break;
					case 420:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -416:
						break;
					case 421:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -417:
						break;
					case 422:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -418:
						break;
					case 423:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -419:
						break;
					case 424:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -420:
						break;
					case 425:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -421:
						break;
					case 426:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -422:
						break;
					case 427:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -423:
						break;
					case 428:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -424:
						break;
					case 429:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -425:
						break;
					case 430:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -426:
						break;
					case 431:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -427:
						break;
					case 432:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -428:
						break;
					case 433:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -429:
						break;
					case 434:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -430:
						break;
					case 435:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -431:
						break;
					case 436:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -432:
						break;
					case 437:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -433:
						break;
					case 438:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -434:
						break;
					case 439:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -435:
						break;
					case 440:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -436:
						break;
					case 441:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -437:
						break;
					case 442:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -438:
						break;
					case 443:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -439:
						break;
					case 444:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -440:
						break;
					case 445:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -441:
						break;
					case 446:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -442:
						break;
					case 447:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -443:
						break;
					case 448:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -444:
						break;
					case 449:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -445:
						break;
					case 450:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -446:
						break;
					case 451:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -447:
						break;
					case 452:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -448:
						break;
					case 453:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -449:
						break;
					case 454:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -450:
						break;
					case 455:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -451:
						break;
					case 456:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -452:
						break;
					case 457:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -453:
						break;
					case 458:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -454:
						break;
					case 459:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -455:
						break;
					case 460:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -456:
						break;
					case 461:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -457:
						break;
					case 462:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -458:
						break;
					case 463:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -459:
						break;
					case 464:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -460:
						break;
					case 465:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -461:
						break;
					case 466:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -462:
						break;
					case 467:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -463:
						break;
					case 468:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -464:
						break;
					case 469:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -465:
						break;
					case 470:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -466:
						break;
					case 471:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -467:
						break;
					case 472:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -468:
						break;
					case 473:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -469:
						break;
					case 474:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -470:
						break;
					case 475:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -471:
						break;
					case 476:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -472:
						break;
					case 477:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -473:
						break;
					case 478:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -474:
						break;
					case 479:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -475:
						break;
					case 480:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -476:
						break;
					case 481:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -477:
						break;
					case 482:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -478:
						break;
					case 483:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -479:
						break;
					case 484:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -480:
						break;
					case 485:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -481:
						break;
					case 486:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -482:
						break;
					case 487:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -483:
						break;
					case 488:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -484:
						break;
					case 489:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -485:
						break;
					case 490:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -486:
						break;
					case 491:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -487:
						break;
					case 492:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -488:
						break;
					case 493:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -489:
						break;
					case 494:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -490:
						break;
					case 495:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -491:
						break;
					case 496:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -492:
						break;
					case 497:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -493:
						break;
					case 498:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -494:
						break;
					case 499:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -495:
						break;
					case 500:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -496:
						break;
					case 501:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -497:
						break;
					case 502:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -498:
						break;
					case 503:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -499:
						break;
					case 504:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -500:
						break;
					case 505:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -501:
						break;
					case 506:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -502:
						break;
					case 507:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -503:
						break;
					case 508:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -504:
						break;
					case 509:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -505:
						break;
					case 510:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -506:
						break;
					case 511:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -507:
						break;
					case 512:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -508:
						break;
					case 513:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -509:
						break;
					case 514:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -510:
						break;
					case 515:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -511:
						break;
					case 516:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -512:
						break;
					case 517:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -513:
						break;
					case 518:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -514:
						break;
					case 519:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -515:
						break;
					case 520:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -516:
						break;
					case 521:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -517:
						break;
					case 522:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -518:
						break;
					case 523:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -519:
						break;
					case 524:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -520:
						break;
					case 525:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -521:
						break;
					case 526:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -522:
						break;
					case 527:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -523:
						break;
					case 528:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -524:
						break;
					case 529:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -525:
						break;
					case 530:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -526:
						break;
					case 531:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -527:
						break;
					case 532:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -528:
						break;
					case 533:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -529:
						break;
					case 534:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -530:
						break;
					case 535:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -531:
						break;
					case 536:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -532:
						break;
					case 537:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -533:
						break;
					case 538:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -534:
						break;
					case 539:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -535:
						break;
					case 540:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -536:
						break;
					case 541:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -537:
						break;
					case 542:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -538:
						break;
					case 543:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -539:
						break;
					case 544:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -540:
						break;
					case 545:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -541:
						break;
					case 546:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -542:
						break;
					case 547:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -543:
						break;
					case 548:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -544:
						break;
					case 549:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -545:
						break;
					case 550:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -546:
						break;
					case 551:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -547:
						break;
					case 552:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -548:
						break;
					case 553:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -549:
						break;
					case 554:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -550:
						break;
					case 555:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -551:
						break;
					case 556:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -552:
						break;
					case 557:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -553:
						break;
					case 558:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -554:
						break;
					case 559:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -555:
						break;
					case 560:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -556:
						break;
					case 561:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -557:
						break;
					case 562:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -558:
						break;
					case 563:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -559:
						break;
					case 564:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -560:
						break;
					case 565:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -561:
						break;
					case 566:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -562:
						break;
					case 567:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -563:
						break;
					case 568:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -564:
						break;
					case 569:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -565:
						break;
					case 570:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -566:
						break;
					case 571:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -567:
						break;
					case 572:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -568:
						break;
					case 573:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -569:
						break;
					case 574:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -570:
						break;
					case 575:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -571:
						break;
					case 576:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -572:
						break;
					case 577:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -573:
						break;
					case 578:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -574:
						break;
					case 579:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -575:
						break;
					case 580:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -576:
						break;
					case 581:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -577:
						break;
					case 582:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -578:
						break;
					case 583:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -579:
						break;
					case 584:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -580:
						break;
					case 585:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -581:
						break;
					case 586:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -582:
						break;
					case 587:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -583:
						break;
					case 588:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -584:
						break;
					case 589:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -585:
						break;
					case 590:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -586:
						break;
					case 591:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -587:
						break;
					case 592:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -588:
						break;
					case 593:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -589:
						break;
					case 594:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -590:
						break;
					case 595:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -591:
						break;
					case 596:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -592:
						break;
					case 597:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -593:
						break;
					case 598:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -594:
						break;
					case 599:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -595:
						break;
					case 600:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -596:
						break;
					case 601:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -597:
						break;
					case 602:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -598:
						break;
					case 603:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -599:
						break;
					case 604:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -600:
						break;
					case 605:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -601:
						break;
					case 606:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -602:
						break;
					case 607:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -603:
						break;
					case 608:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -604:
						break;
					case 609:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -605:
						break;
					case 610:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -606:
						break;
					case 611:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -607:
						break;
					case 612:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -608:
						break;
					case 613:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -609:
						break;
					case 614:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -610:
						break;
					case 615:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -611:
						break;
					case 616:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -612:
						break;
					case 617:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -613:
						break;
					case 618:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -614:
						break;
					case 619:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -615:
						break;
					case 620:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -616:
						break;
					case 621:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -617:
						break;
					case 622:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -618:
						break;
					case 623:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -619:
						break;
					case 624:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -620:
						break;
					case 625:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -621:
						break;
					case 626:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -622:
						break;
					case 627:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -623:
						break;
					case 628:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -624:
						break;
					case 629:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -625:
						break;
					case 630:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -626:
						break;
					case 631:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -627:
						break;
					case 632:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -628:
						break;
					case 633:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -629:
						break;
					case 634:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -630:
						break;
					case 635:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -631:
						break;
					case 636:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -632:
						break;
					case 637:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -633:
						break;
					case 638:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -634:
						break;
					case 639:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -635:
						break;
					case 640:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -636:
						break;
					case 641:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -637:
						break;
					case 642:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -638:
						break;
					case 643:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -639:
						break;
					case 644:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -640:
						break;
					case 645:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -641:
						break;
					case 646:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -642:
						break;
					case 647:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -643:
						break;
					case 648:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -644:
						break;
					case 649:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -645:
						break;
					case 650:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -646:
						break;
					case 651:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -647:
						break;
					case 652:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -648:
						break;
					case 653:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -649:
						break;
					case 654:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -650:
						break;
					case 655:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -651:
						break;
					case 656:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -652:
						break;
					case 657:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -653:
						break;
					case 658:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -654:
						break;
					case 659:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -655:
						break;
					case 660:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -656:
						break;
					case 661:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -657:
						break;
					case 662:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -658:
						break;
					case 663:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -659:
						break;
					case 664:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -660:
						break;
					case 665:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -661:
						break;
					case 666:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -662:
						break;
					case 667:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -663:
						break;
					case 668:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -664:
						break;
					case 669:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -665:
						break;
					case 670:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -666:
						break;
					case 671:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -667:
						break;
					case 672:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -668:
						break;
					case 673:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -669:
						break;
					case 674:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -670:
						break;
					case 675:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -671:
						break;
					case 676:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -672:
						break;
					case 677:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -673:
						break;
					case 678:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -674:
						break;
					case 679:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -675:
						break;
					case 680:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -676:
						break;
					case 681:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -677:
						break;
					case 682:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -678:
						break;
					case 683:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -679:
						break;
					case 684:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -680:
						break;
					case 685:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -681:
						break;
					case 686:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -682:
						break;
					case 687:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -683:
						break;
					case 688:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -684:
						break;
					case 689:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -685:
						break;
					case 690:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -686:
						break;
					case 691:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -687:
						break;
					case 692:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -688:
						break;
					case 693:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -689:
						break;
					case 694:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -690:
						break;
					case 695:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -691:
						break;
					case 696:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -692:
						break;
					case 697:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -693:
						break;
					case 698:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -694:
						break;
					case 699:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -695:
						break;
					case 700:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -696:
						break;
					case 701:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -697:
						break;
					case 702:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -698:
						break;
					case 703:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -699:
						break;
					case 704:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -700:
						break;
					case 705:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -701:
						break;
					case 706:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -702:
						break;
					case 707:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -703:
						break;
					case 708:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -704:
						break;
					case 709:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -705:
						break;
					case 710:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -706:
						break;
					case 711:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -707:
						break;
					case 712:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -708:
						break;
					case 713:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -709:
						break;
					case 714:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -710:
						break;
					case 715:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -711:
						break;
					case 716:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -712:
						break;
					case 717:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -713:
						break;
					case 718:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -714:
						break;
					case 719:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -715:
						break;
					case 720:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -716:
						break;
					case 721:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -717:
						break;
					case 722:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -718:
						break;
					case 723:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -719:
						break;
					case 724:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -720:
						break;
					case 725:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -721:
						break;
					case 726:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -722:
						break;
					case 727:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -723:
						break;
					case 728:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -724:
						break;
					case 729:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -725:
						break;
					case 730:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -726:
						break;
					case 731:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -727:
						break;
					case 732:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -728:
						break;
					case 733:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -729:
						break;
					case 734:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -730:
						break;
					case 735:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -731:
						break;
					case 736:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -732:
						break;
					case 737:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -733:
						break;
					case 738:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -734:
						break;
					case 739:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -735:
						break;
					case 740:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -736:
						break;
					case 741:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -737:
						break;
					case 742:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -738:
						break;
					case 743:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -739:
						break;
					case 744:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -740:
						break;
					case 745:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -741:
						break;
					case 746:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -742:
						break;
					case 747:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -743:
						break;
					case 748:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -744:
						break;
					case 749:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -745:
						break;
					case 750:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -746:
						break;
					case 751:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -747:
						break;
					case 752:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -748:
						break;
					case 753:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -749:
						break;
					case 754:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -750:
						break;
					case 755:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -751:
						break;
					case 756:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -752:
						break;
					case 757:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -753:
						break;
					case 758:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -754:
						break;
					case 759:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -755:
						break;
					case 760:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -756:
						break;
					case 761:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -757:
						break;
					case 762:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -758:
						break;
					case 763:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -759:
						break;
					case 764:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -760:
						break;
					case 765:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -761:
						break;
					case 766:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -762:
						break;
					case 767:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -763:
						break;
					case 768:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -764:
						break;
					case 769:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -765:
						break;
					case 770:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -766:
						break;
					case 771:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -767:
						break;
					case 772:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -768:
						break;
					case 773:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -769:
						break;
					case 774:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -770:
						break;
					case 775:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -771:
						break;
					case 776:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -772:
						break;
					case 777:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -773:
						break;
					case 778:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -774:
						break;
					case 779:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -775:
						break;
					case 780:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -776:
						break;
					case 781:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -777:
						break;
					case 782:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -778:
						break;
					case 783:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -779:
						break;
					case 784:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -780:
						break;
					case 785:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -781:
						break;
					case 786:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -782:
						break;
					case 787:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -783:
						break;
					case 788:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -784:
						break;
					case 789:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -785:
						break;
					case 790:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -786:
						break;
					case 791:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -787:
						break;
					case 792:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -788:
						break;
					case 793:
						{ return new Symbol(sym.FullURI, yytext().intern()); }
					case -789:
						break;
					default:
						yy_error(YY_E_INTERNAL,false);
					case -1:
					}
					yy_initial = true;
					yy_state = yy_state_dtrans[yy_lexical_state];
					yy_next_state = YY_NO_STATE;
					yy_last_accept_state = YY_NO_STATE;
					yy_mark_start();
					yy_this_accept = yy_acpt[yy_state];
					if (YY_NOT_ACCEPT != yy_this_accept) {
						yy_last_accept_state = yy_state;
						yy_mark_end();
					}
				}
			}
		}
	}
}
